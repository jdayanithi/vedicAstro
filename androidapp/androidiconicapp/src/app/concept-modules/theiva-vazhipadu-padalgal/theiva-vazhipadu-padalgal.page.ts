import { Component, OnInit, ViewChild } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { ToastController, AlertController, IonModal } from '@ionic/angular';
import { trigger, state, style, transition, animate } from '@angular/animations';

interface Padal {
  id: string;
  name: string;
  deity: string;
  text?: string;
  meaning?: string;
  benefits: string[];
  howToSing?: string;
  bestTime?: string;
  duration?: string;
  author?: string;
  verses?: number;
  webLink?: string;
  videoLink?: string;
  specialFeatures?: string[];
  individualSongs?: Padal[];
}

interface PadalCategory {
  id: string;
  name: string;
  icon: string;
  color: string;
  mantras: Padal[];
}

@Component({
  selector: 'app-theiva-vazhipadu-padalgal',
  templateUrl: './theiva-vazhipadu-padalgal.page.html',
  styleUrls: ['./theiva-vazhipadu-padalgal.page.scss'],
  animations: [
    trigger('slideInOut', [
      transition(':enter', [
        style({ height: '0px', opacity: 0, overflow: 'hidden' }),
        animate('300ms ease-in-out', style({ height: '*', opacity: 1 }))
      ]),
      transition(':leave', [
        animate('300ms ease-in-out', style({ height: '0px', opacity: 0, overflow: 'hidden' }))
      ])
    ])
  ]
})
export class TheivaValzipaduPadalgalPage implements OnInit {

  @ViewChild('detailModal', { static: true }) detailModal!: IonModal;
  @ViewChild('previewModal', { static: true }) previewModal!: IonModal;

  selectedSegment = 'categories';
  selectedCategory = '';
  selectedPadal: Padal | null = null;
  selectedPadalForPreview: any = null;
  searchTerm = '';
  isPlaying = false;
  currentAudio: HTMLAudioElement | null = null;
  favoritePadalIds: string[] = [];
  isBookmarked = false;
  
  // Additional properties for padal categories
  selectedPadalCategory: any = null;
  expandedCategories: { [key: string]: boolean } = {};
  favoritePadalCategoryIds: string[] = [];
  
  // Divine Worship Songs Structure
  padalCategories: PadalCategory[] = [
    {
      id: 'vinayagar',
      name: 'ро╡ро┐роиро╛ропроХро░рпН рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯРШ',
      color: 'primary',
      mantras: [
        {
          id: 'vinayagar_agaval',
          name: 'ро╡ро┐роиро╛ропроХро░рпН роЕроХро╡ро▓рпН',
          deity: 'ро╡ро┐роиро╛ропроХро░рпН',
          text: 'ро╡ро╛ро┤рпНроХ роЕроирпНродрогро░рпН ро╡ро╛ро┤рпНроХ роХрпЛро╡ро┐роирпНродройрпН ро╡ро╛ро┤рпНроХ\nро╡рпЗродроорпН роиро╛ройрпНроХро┐ройрпБроорпН роорпЖропрпНрокрпНрокрпКро░рпБро│рпН ро╡ро╛ро┤рпНроХ\nро╡ро╛ро┤рпНроХ роЕройрпНрокро░рпН роЕро╡ро░рпНродроорпН роиро╛роороорпН ро╡ро╛ро┤рпНроХ\nро╡ро╛ро┤рпНроХ роЗройрпНрокроорпКроЯрпБ рокро┐ро░роороорпН ро╡ро╛ро┤рпНроХ\nроЮро╛ро┤ро▓рпН рооро╛ро▓рпИропро┐ро▓рпН роирогрпНрогро┐роп роХро╛родро▓рпН\nроЮро╛ро▓роорпН роПро┤рпИропрпБроорпН роиройрпНройрпЖро▒ро┐ ро╡ро╛ро┤рпНроХ',
          benefits: ['ро╡ро┐роХрпНройроЩрпНроХро│рпН роирпАроЩрпНроХрпБроорпН', 'роЮро╛рой ро╡ро│ро░рпНроЪрпНроЪро┐', 'рокрпБродрпНродро┐ роХрпВро░рпНроорпИ', 'роЪроХро▓ роХро╛ро░ро┐ропроЩрпНроХро│рпБроорпН ро╡рпЖро▒рпНро▒ро┐'],
          author: 'роЕро╡рпНро╡рпИропро╛ро░рпН',
          verses: 72,
          howToSing: 'рокроХрпНродро┐ропрпБроЯройрпН родрпЖро│ро┐ро╡ро╛рой роЙроЪрпНроЪро░ро┐рокрпНрокрпБроЯройрпН',
          bestTime: 'ро╡ро┐роиро╛ропроХ роЪродрпБро░рпНродрпНродро┐, рокрпБродройрпНроХро┐ро┤роорпИ',
          duration: '30-45 роиро┐рооро┐роЯроЩрпНроХро│рпН'
        }
      ]
    },
    {
      id: 'murugan',
      name: 'роорпБро░рпБроХройрпН рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯжЪ',
      color: 'secondary',
      mantras: [
        {
          id: 'sakalakala_valli_malai',
          name: 'роЪроХро▓роХро▓ро╛ро╡ро▓рпНро▓ро┐ рооро╛ро▓рпИ',
          deity: 'роорпБро░рпБроХройрпН',
          text: 'роЪроХро▓роХро▓ро╛ро╡ро▓рпНро▓ро┐ родройрпИропроЯрпИроирпНродрпБ\nроЪроЩрпНроХро░роиро┐ройрпН рокрпБродро▓рпНро╡ройрпН рокродроорпНрокрогро┐роирпНродрпБ\nроЪрпБроХроорпБро▒рпБ роиро╛ро│рпЖро▓рпНро▓ро╛роорпН родрпБройрпНрокроХро▓роирпНродрпБ\nроЪрпБроирпНродро░ро╡ро▓рпНро▓ро┐роХрпНроХрпБ роорогро╛ро│ройрпЗ\nроЕроХро┐ро▓ро╛рогрпНроЯ роХрпЛроЯро┐ рокро┐ро░рокроЮрпНроЪройрпЗ\nроЕро░рпБроорпБроХроорпН роЖро▒рпБроЯрпИ ропрокрпНрокройрпЗ',
          benefits: ['роХро▓рпНро╡ро┐ роЪро┐ро▒рокрпНрокрпБ', 'роХро▓рпИ ро╡ро│ро░рпНроЪрпНроЪро┐', 'рокро┐ро│рпНро│рпИроХро│рпН роиро▓роорпН', 'ро╡ро▓рпНро▓ро┐ родрпЗро╡роЪрпЗройро╛рокродро┐ роЕро░рпБро│рпН'],
          author: 'роХрпБрооро░роХрпБро░рпБрокро░ро░рпН',
          verses: 100,
          howToSing: 'роорпЖро▓рпНро▓ро┐роп роЗроЪрпИропрпБроЯройрпН рокроХрпНродро┐ропрпБроЯройрпН',
          bestTime: 'роХро╛ро░рпНродрпНродро┐роХрпИ рооро╛родроорпН, роЪрпЖро╡рпНро╡ро╛ропрпНроХро┐ро┤роорпИ',
          duration: '1-1.5 роорогро┐ роирпЗро░роорпН'
        },
        {
          id: 'sasti_kavasam',
          name: 'роЪро╖рпНроЯро┐ роХро╡роЪроорпН',
          deity: 'роорпБро░рпБроХройрпН',
          text: 'роЖродро┐ роЕроирпНродроорпН роЗро▓рпНро▓ро╛род роЖройроирпНрод ро╡ро▓рпНро▓ро┐ропрпЗ\nроЖродро┐роЪроХрпНродро┐ роЖройроирпНродроорпН роЖро▒рпБроорпБроХ ро╡ро▓рпНро▓ро┐ропрпЗ\nрокро╛родрооро▓ро░рпН роЪрпВроЯрпБроХро┐ройрпНро▒ рокро╛ро░род ро╡ро▓рпНро▓ро┐ропрпЗ\nрокро╛ро▓ роорпБроХроЩрпНроХро│рпН роЖро▒рпБроЯрпИроп рокрогрпНрокрпБ ро╡ро▓рпНро▓ро┐ропрпЗ\nро╡рпЗродроорпН рокрпБроХро┤рпБроорпН ро╡ро┐рооро▓ ро╡ро▓рпНро▓ро┐ропрпЗ\nроорпЗро▓рпЛро░рпН роЕройрпИро╡ро░рпБроорпН ро╡рогроЩрпНроХрпБроорпН ро╡ро▓рпНро▓ро┐ропрпЗ',
          benefits: ['рокропроорпН роирпАроХрпНроХроорпН', 'роЖрокродрпНродрпБ роиро┐ро╡ро╛ро░рогроорпН', 'роЪродрпНро░рпБ роЪроЩрпНроХро╛ро░роорпН', 'роорпБро░рпБроХройрпН рокро╛родрпБроХро╛рокрпНрокрпБ'],
          author: 'родрпЗро╡ро░ро╛роп роЪрпБро╡ро╛рооро┐роХро│рпН',
          verses: 244,
          howToSing: 'ро╡рпАро░рооро╛рой роХрпБро░ро▓ро┐ро▓рпН рокроХрпНродро┐ропрпБроЯройрпН',
          bestTime: 'роЪрпЖро╡рпНро╡ро╛ропрпН, ро╡рпЖро│рпНро│ро┐роХрпНроХро┐ро┤роорпИ',
          duration: '45-60 роиро┐рооро┐роЯроЩрпНроХро│рпН'
        }
      ]
    },
    {
      id: 'shiva',
      name: 'роЪро┐ро╡ройрпН рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯХЙя╕П',
      color: 'tertiary',
      mantras: [
        {
          id: 'thiruvasagam',
          name: 'родро┐ро░рпБро╡ро╛роЪроХроорпН (роЪро┐ро▒рокрпНрокрпБ рокро╛роЯро▓рпНроХро│рпН)',
          deity: 'роЪро┐ро╡рокрпЖро░рпБрооро╛ройрпН',
          text: 'роЕроЯро┐ропрпЗройрпН роЙрогро░рпНро╡рпБ роХрпЖроЯрпНроЯро┐ рокрпКропрпНроорпНроорпИ роЪрпЖропрпНродро╛ро▓рпН\nроЕроЯро┐ропрпЗройрпИроХрпН роХрпКро▓рпНроХ роЕро░ройрпН роОройрпНроХрпЛ\nрокроЯро┐ропрпЗро▒рпБроорпН роЙроорпНрокро░рпН рокро▓ро░рпН родрпКро┤рпБродрпБ роПродрпНрод\nрокрогрпНрогро┐ройрпН роЗроЪрпИ роЮро╛ройроорпН рокроХро░рпНроирпНродрпЛройрпЗ\nродроЯроорпЗройро┐ роирпАро▒рогро┐ роЪрпЖройрпНройро┐ропройрпЗ\nродройро┐роорпВро░рпНродрпНродро┐ роОройрпНро▒ройрпН родропро╛роиро┐родро┐ропрпЗ',
          benefits: ['роЖройрпНроорпАроХ ро╡ро┐роорпЛроЪройроорпН', 'роЪро┐ро╡ роХроЯро╛роХрпНро╖роорпН', 'рокро╛ро╡ ро╡ро┐роорпЛроЪройроорпН', 'роорой роЪрпБродрпНродро┐'],
          author: 'рооро╛рогро┐роХрпНроХро╡ро╛роЪроХро░рпН',
          verses: 658,
          howToSing: 'роЖродрпНроо рокроХрпНродро┐ропрпБроЯройрпН рооройродро╛ро░',
          bestTime: 'роЪро┐ро╡ро░ро╛родрпНродро┐ро░ро┐, родро┐роЩрпНроХроЯрпНроХро┐ро┤роорпИ',
          duration: '2-3 роорогро┐ роирпЗро░роорпН'
        }
      ]
    },
    {
      id: 'amman',
      name: 'роЕроорпНрооройрпН рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯкФ',
      color: 'danger',
      mantras: [
        {
          id: 'lalitha_sahasranamam',
          name: 'ро▓ро▓ро┐родро╛ роЪро╣ро╕рпНро░ роиро╛роороорпН (родрооро┐ро┤рпН)',
          deity: 'ро▓ро▓ро┐родро╛ роЕроорпНрокро┐роХрпИ',
          text: 'ро╢рпНро░рпАрооро╛родро╛ ро╢рпНро░рпАрооро╣ро╛ро░ро╛роЬрпНроЮрпА ро╢рпНро░рпАроородрпНроЪро┐роорпНро╣ро╛ро╕ройрпЗро╢рпНро╡ро░рпА\nроЪро┐родрпНро░ро╛роХрпНро░рогро┐ роЪроХрпНродро┐ роЪроХрпНродро┐роородрпНрокрпНро░ро┐ропро╛\nроЪро┐родрпНро░ро╛роХрог роиро╛родроЪроХрпНродро┐ роЪродрпНро░рпБрокрпНрокро╛ ро╕роороХрпНройро┐родрпНропро╛\nроЪро┐родрпНро░ро╛роироирпНрод ро▓ро╣ро░рпА роЪро╛роороХ роиро╡ ро░рпВрокро┐рогрпА',
          benefits: ['роЪро░рпНро╡ роРро╕рпНро╡ро░рпНропроорпН', 'роЕроорпНрокро┐роХрпИ роЕро░рпБро│рпН', 'роЪрпМроирпНродро░рпНроп ро╡ро░рпНродрпНродройрпИ', 'роЪроХро▓ роЪро┐родрпНродро┐роХро│рпН'],
          author: 'роЕроХро╕рпНродро┐ропро░рпН',
          verses: 1000,
          howToSing: 'роЪроирпНродрпЛро╖рооро╛рой рооройродрпБроЯройрпН роорпЖродрпБро╡ро╛роХ',
          bestTime: 'ро╡рпЖро│рпНро│ро┐роХрпНроХро┐ро┤роорпИ, роиро╡ро░ро╛родрпНродро┐ро░ро┐',
          duration: '1.5-2 роорогро┐ роирпЗро░роорпН',
          webLink: 'https://aanmeegam.co.in/blogs/lyrics/lalitha-sahasranamam-lyrics-tamil/',
          videoLink: 'https://youtu.be/DtSBLpQStT4'
        },
        {
          id: 'abhirami_anthathi',
          name: 'роЕрокро┐ро░ро╛рооро┐ роЕроирпНродро╛родро┐',
          deity: 'роЕрокро┐ро░ро╛рооро┐ роЕроорпНрокро┐роХрпИ',
          text: 'родро╛ро░рпН роЕрооро░рпН роХрпКройрпНро▒рпИропрпБроорпН роЪроЩрпНроХро░ройрпН роЪрпЖрогрпНроЯрпБ роЕро▓роХрпБроорпН роороЯроирпНродрпИропро░рпН рокроЩрпНроХройрпН рооро▓ро░рпНроирпНродрпБ роЕро░рпБро│рпН роХрпВро░рпНроирпНродрпБ\nроиро╛ро░рпН роЕропро▓рпН ро╡рпЗрогро┐ропрпБроорпН роиро╛роХроорпБроорпН роЖроЯрпИропрпБроорпН рокрпВрогрпН роЕрогро┐ рооро╛ро░рпНрокро┐ройро┐ро▓рпН рокрпЛро▓ ро╡ро│ро░рпНроирпНродрпБ\nрокро╛ро░рпН роЙропро░рпН роХрпКроЩрпНроХрпИропрпБроорпН рокро╛роорпНрокрогрпИ роорпЗроХро▓рпИропрпБроорпН роЪрпБро░рпБроорпНрокрпБ роЕро▓ро┐ роХрпЗроЪро░рпИропрпБроорпН ро╡ро┐ропроХрпНроХрпБроорпН\nроХро╛ро░рпН роЙропро░рпН роорпЗройро┐ропрпБроорпН роХрогрпН роЗроорпИ рокрпЛро▓ро╡рпЗ роироорпН роЕрокро┐ро░ро╛рооро┐ роХро╡ро┐ройрпН родро┐ро░рпБроорпЗройро┐ропрпЗ',
          meaning: 'роЕрокро┐ро░ро╛рооро┐ роЕроорпНрокро┐роХрпИропро┐ройрпН родро┐ро░рпБроорпЗройро┐ропро┤роХрпБ рооро▒рпНро▒рпБроорпН роЕро░рпБро│ро╛роЪро┐ропрпИрокрпН рокрпЛро▒рпНро▒рпБроорпН роЕро▒рпНрокрпБродрооро╛рой роирпВро▓рпН. роЕрокро┐ро░ро╛рооро┐родрпНродрокродро░рпН роОройрпНройрпБроорпН роЪрпБрокрпНрокро┐ро░роорогро┐роп рокро╛ро░родро┐ропро╛ро░ро╛ро▓рпН роЗропро▒рпНро▒рокрпНрокроЯрпНроЯ 100 рокро╛роЯро▓рпНроХро│ро┐ройрпН роЕроирпНродро╛родро┐.',
          benefits: [
            'роЕроорпНрокро┐роХрпИ роЕро░рпБро│рпН рокрпЖро▒рпБродро▓рпН',
            'роЕро┤роХрпБ ро╡ро│ро░рпНроЪрпНроЪро┐',
            'родро┐ро░рпБроорогродрпН родроЯрпИроХро│рпН роирпАроЩрпНроХрпБродро▓рпН',
            'роХрпБро▓родрпЖропрпНро╡ роЕро░рпБро│рпН',
            'роЮро╛рой ро╡ро│ро░рпНроЪрпНроЪро┐',
            'роорой роЕроорпИродро┐',
            'рокро░ро╛роЪроХрпНродро┐ роЕройрпБрокро╡роорпН',
            'ро╡рпЗрод роЮро╛ройроорпН',
            'роЖройрпНроорпАроХ ро╡ро┐роорпЛроЪройроорпН',
            'роЪро░рпНро╡ роЪрпМрокро╛роХрпНроХро┐ропроорпН'
          ],
          author: 'роЕрокро┐ро░ро╛рооро┐родрпНродрокродро░рпН (роЪрпБрокрпНрокро┐ро░роорогро┐роп рокро╛ро░родро┐ропро╛ро░рпН)',
          verses: 100,
          howToSing: 'рокроХрпНродро┐ропрпБроЯройрпН роорпЖродрпБро╡ро╛роХ роТро╡рпНро╡рпКро░рпБ рокро╛роЯро▓ро╛роХ роЪрпКро▓рпНро▓ро╡рпБроорпН. роЕроорпНрокро┐роХрпИропро┐ройрпН родро┐ро░рпБро╡рпБро░рпБро╡родрпНродрпИ рооройродро┐ро▓рпН роиро┐ройрпИродрпНродрпБроХрпН роХрпКрогрпНроЯрпБ рокро╛роЯро╡рпБроорпН.',
          bestTime: 'ро╡рпЖро│рпНро│ро┐роХрпНроХро┐ро┤роорпИ, роЕрооро╛ро╡ро╛роЪрпИ, рокрпМро░рпНрогрооро┐, роиро╡ро░ро╛родрпНродро┐ро░ро┐ роХро╛ро▓роЩрпНроХро│рпН',
          duration: '45-60 роиро┐рооро┐роЯроЩрпНроХро│рпН',
          webLink: 'https://ta.wikisource.org/wiki/роЕрокро┐ро░ро╛рооро┐_роЕроирпНродро╛родро┐',
          videoLink: 'https://youtu.be/AbhiramiAnthathi',
          specialFeatures: [
            'роТро╡рпНро╡рпКро░рпБ рокро╛роЯро▓рпБроорпН роЕроирпНродро╛родро┐ рокро╛рогро┐ропро┐ро▓рпН роЕроорпИроирпНродрпБро│рпНро│родрпБ',
            'роЕроорпНрокро┐роХрпИропро┐ройрпН ро╡рпЖро╡рпНро╡рпЗро▒рпБ ро░рпВрокроЩрпНроХро│рпИ ро╡ро░рпНрогро┐роХрпНроХро┐ро▒родрпБ',
            'родрооро┐ро┤рпН роЗро▓роХрпНроХро┐ропродрпНродро┐ройрпН роЪро┐ро▒роирпНрод рокроЯрпИрокрпНрокрпБроХро│ро┐ро▓рпН роТройрпНро▒рпБ',
            'роЖройрпНроорпАроХ роЮро╛ройроорпН рооро▒рпНро▒рпБроорпН рокроХрпНродро┐ роЙрогро░рпНро╡рпИ ро╡ро│ро░рпНроХрпНроХро┐ро▒родрпБ'
          ]
        }
      ]
    },
    {
      id: 'vishnu',
      name: 'ро╡ро┐ро╖рпНрогрпБ рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯРЪ',
      color: 'success',
      mantras: [
        {
          id: 'vishnu_sahasranamam',
          name: 'ро╡ро┐ро╖рпНрогрпБ роЪро╣ро╕рпНро░ роиро╛роороорпН',
          deity: 'ро╡ро┐ро╖рпНрогрпБ',
          text: 'ро╡ро┐ро╢рпНро╡роорпН ро╡ро┐ро╖рпНрогрпБро░рпНро╡ро╖роЯрпНроХро╛ро░рпЛ рокрпВрод рокро╡рпНроп рокро╡родрпН рокрпНро░рокрпБ:\nрокрпВродроХреГродрпН рокрпВродрокрпВро░рпНродрпН рокро╛ро╡рпЛ рокрпВродро╛родрпНрооро╛ рокрпВродрокро╛ро╡рой:\nрокрпВро░рпНрогроХро╛роорпЛ роЕроХро╛рооро╣ро╛ роХро╛роо роХрпЛроЯрпА рокро┐ро░рпБрокрпН рокро┐ро░рпБродрпБ:\nро╡ро░ родрпЛ ро╡ро░рпБрод роИроЪрпЛ ро╡ро░рпБрог роУ рооро╛ро░рпБрод роУрооро░рпБрод:',
          benefits: ['ро╡ро┐ро╖рпНрогрпБ роЕройрпБроХрпНро░ро╣роорпН', 'ро▓рпЛроХ роХро▓рпНропро╛рогроорпН', 'рокро╛рок роиро╛роЪроорпН', 'роорпЛроХрпНро╖ рокро┐ро░ро╛рокрпНродро┐'],
          author: 'ро╡рпЗрод ро╡ро┐ропро╛роЪро░рпН',
          verses: 1000,
          howToSing: 'роУроорпН роЙроЪрпНроЪро░ро┐рокрпНрокрпБроЯройрпН роЪро╛роирпНродрооро╛роХ',
          bestTime: 'роПроХро╛родроЪро┐, ро╡ро┐ропро╛ро┤роХрпНроХро┐ро┤роорпИ',
          duration: '1-1.5 роорогро┐ роирпЗро░роорпН'
        }
      ]
    },
    {
      id: 'hanuman',
      name: 'ро╣ройрпБрооро╛ройрпН рокро╛роЯро▓рпНроХро│рпН',
      icon: 'ЁЯРТ',
      color: 'warning',
      mantras: [
        {
          id: 'hanuman_chalisa_tamil',
          name: 'ро╣ройрпБрооро╛ройрпН роЪро╛ро▓рпАроЪро╛ (родрооро┐ро┤рпН)',
          deity: 'ро╣ройрпБрооро╛ройрпН',
          text: 'роЬрпЖропрпН ро╣ройрпБрооро╛ройрпН роЮро╛рой роХрпБрог роЪро╛роХро░рпН\nроЬрпЖропрпН роХрокрпАроЪ родро┐роХрпБрогрпН ро▓рпЛроХ роЙроЬро╛роХро░рпН\nро░ро╛роо родрпВродрпН роЕродрпБро▓ро┐родрпН рокро▓рпН родро╛рооро╛\nроЕроЮрпНроЬройро┐ рокрпБродрпНро░ рокро╡ройрпН роЪрпБродрпН роиро╛рооро╛',
          benefits: ['рокропроорпН роирпАроХрпНроХроорпН', 'рокро▓ роЪрпЗро░рпНроХрпНроХрпИ', 'рокроХрпНродро┐ ро╡ро│ро░рпНроЪрпНроЪро┐', 'роЖрокродрпНродрпБ роиро┐ро╡ро╛ро░рогроорпН'],
          author: 'родрпБро│роЪро┐родро╛ро╕рпН',
          verses: 40,
          howToSing: 'роЙро▒рпНроЪро╛роХрооро╛рой роХрпБро░ро▓ро┐ро▓рпН',
          bestTime: 'роЪрпЖро╡рпНро╡ро╛ропрпН, роЪройро┐роХрпНроХро┐ро┤роорпИ',
          duration: '15-20 роиро┐рооро┐роЯроЩрпНроХро│рпН'
        }
      ]
    }
  ];

  filteredPadals: Padal[] = [];


  constructor(
    private toastController: ToastController,
    private alertController: AlertController,
    private http: HttpClient
  ) { }

  ngOnInit() {
    this.loadFavorites();
    this.loadFavoritePadals();
    this.loadAbhiramiAnthathiSongs();
  }

  loadAbhiramiAnthathiSongs() {
    this.http.get<any[]>('assets/data/abhirami-anthanthi.json').subscribe(songs => {
      const ammanCategory = this.padalCategories.find(cat => cat.id === 'amman');
      if (ammanCategory) {
        const abhiramiIndex = ammanCategory.mantras.findIndex(m => m.id === 'abhirami_anthathi');
        
        if (abhiramiIndex !== -1) {
          // Add individual songs as sub-items
          ammanCategory.mantras[abhiramiIndex].individualSongs = songs.map(song => ({
            id: `abhirami_${song.id}`,
            name: song.name,
            deity: 'роЕрокро┐ро░ро╛рооро┐',
            text: song.text,
            meaning: song.meaning,
            benefits: song.benefits || ['роЕроорпНрокро┐роХрпИ роЕро░рпБро│рпН', 'рокро╛родрпБроХро╛рокрпНрокрпБ', 'рокроХрпНродро┐', 'роорпЛроХрпНро╖роорпН'],
            author: 'роЕрокро┐ро░ро╛рооро┐родрпНродрокродро░рпН',
            verses: 1,
            howToSing: 'рокроХрпНродро┐ропрпБроЯройрпН роорпЖродрпБро╡ро╛роХ',
            bestTime: 'ро╡рпЖро│рпНро│ро┐роХрпНроХро┐ро┤роорпИ',
            duration: '2-3 роиро┐рооро┐роЯроЩрпНроХро│рпН'
          }));
        }
      }
    });
  }

  loadFavorites() {
    const stored = localStorage.getItem('favoritePadalIds');
    if (stored) {
      this.favoritePadalIds = JSON.parse(stored);
    }
  }

  loadFavoritePadals() {
    const stored = localStorage.getItem('favoritePadalCategoryIds');
    if (stored) {
      this.favoritePadalCategoryIds = JSON.parse(stored);
    }
  }

  saveFavorites() {
    localStorage.setItem('favoritePadalIds', JSON.stringify(this.favoritePadalIds));
  }

  onSegmentChange(event: any) {
    this.selectedSegment = event.detail.value;
    if (this.selectedSegment === 'categories') {
      this.selectedCategory = '';
    }
  }

  searchPadals() {
    // Filter songs based on search term
    if (this.searchTerm.trim()) {
      const searchTerm = this.searchTerm.toLowerCase().trim();
      // You can implement search logic here if needed
      // For now, just keeping it simple since we use expandable categories
    }
  }

  selectCategory(categoryId: string) {
    this.selectedCategory = categoryId;
    this.selectedSegment = 'padals';
  }

  openPadalDetail(padal: any) {
    this.selectedPadal = padal;
    this.previewModal.dismiss(); // Close preview modal if open
    this.detailModal.present();
  }

  closePadalDetail() {
    this.selectedPadal = null;
    this.detailModal.dismiss();
    this.stopAudio();
  }

  openPadalPreview(padal: any) {
    this.selectedPadalForPreview = padal;
    this.previewModal.present();
  }

  closePadalPreview() {
    this.selectedPadalForPreview = null;
    this.previewModal.dismiss();
  }

  toggleFavorite(padal: Padal) {
    const index = this.favoritePadalIds.indexOf(padal.id);
    if (index > -1) {
      this.favoritePadalIds.splice(index, 1);
      this.presentToast(padal.name + ' ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ роирпАроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
    } else {
      this.favoritePadalIds.push(padal.id);
      this.presentToast(padal.name + ' ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│ро┐ро▓рпН роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
    }
    this.saveFavorites();
  }

  isFavorite(padal: Padal): boolean {
    return this.favoritePadalIds.includes(padal.id);
  }

  playAudio(padal: Padal) {
    if (this.currentAudio) {
      this.currentAudio.pause();
    }
    // Audio implementation would go here
    this.isPlaying = true;
  }

  stopAudio() {
    if (this.currentAudio) {
      this.currentAudio.pause();
      this.currentAudio = null;
      this.isPlaying = false;
    }
  }

  sharePadal(padal: any) {
    const shareText = `${padal.name}\n\n${padal.text}\n\nрокро▓ройрпНроХро│рпН:\n${padal.benefits ? padal.benefits.join('\n') : ''}`;
    if (navigator.share) {
      navigator.share({
        title: padal.name,
        text: shareText
      });
    } else {
      navigator.clipboard.writeText(shareText).then(() => {
        this.presentToast('рокро╛роЯро▓рпН роХро┐ро│ро┐рокрпНрокрпЛро░рпНроЯро┐ро▓рпН роироХро▓рпЖроЯрпБроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
      });
    }
  }

  async presentToast(message: string) {
    const toast = await this.toastController.create({
      message,
      duration: 2000,
      position: 'bottom',
      color: 'success'
    });
    toast.present();
  }

  async showFullBenefits(padal: Padal) {
    const alert = await this.alertController.create({
      header: padal.name + ' - рокро▓ройрпНроХро│рпН',
      message: padal.benefits.map((benefit, index) => (index + 1) + '. ' + benefit).join('<br>'),
      buttons: ['роЪро░ро┐']
    });
    await alert.present();
  }

  toggleBookmark() {
    this.isBookmarked = !this.isBookmarked;
    this.presentToast(this.isBookmarked ? 'рокрпБродрпНродроХроХрпНроХрпБро▒ро┐ роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ' : 'рокрпБродрпНродроХроХрпНроХрпБро▒ро┐ роирпАроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
  }

  // Padal-specific methods
  selectPadalCategory(category: any) {
    this.selectedPadalCategory = category;
  }

  toggleCategory(categoryId: string) {
    this.expandedCategories[categoryId] = !this.expandedCategories[categoryId];
  }

  copyPadal(padal: any) {
    const text = `${padal.name}\n\n${padal.text}\n\nрокро▓ройрпНроХро│рпН:\n${padal.benefits.join('\n')}`;
    navigator.clipboard.writeText(text).then(() => {
      this.presentToast('рокро╛роЯро▓рпН роироХро▓рпЖроЯрпБроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
    });
  }

  toggleFavoritePadal(padal: any) {
    const index = this.favoritePadalCategoryIds.indexOf(padal.id);
    if (index > -1) {
      this.favoritePadalCategoryIds.splice(index, 1);
      this.presentToast('ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ роирпАроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
    } else {
      this.favoritePadalCategoryIds.push(padal.id);
      this.presentToast('ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│ро┐ро▓рпН роЪрпЗро░рпНроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
    }
    localStorage.setItem('favoritePadalCategoryIds', JSON.stringify(this.favoritePadalCategoryIds));
  }

  isFavoritePadal(padal: any): boolean {
    return this.favoritePadalCategoryIds.includes(padal.id);
  }

  trackByPadalId(index: number, padal: any): string {
    return padal.id;
  }

  openWebLink(padal: any) {
    if (padal.webLink) {
      window.open(padal.webLink, '_blank');
    }
  }

  openVideoLink(padal: any) {
    if (padal.videoLink) {
      window.open(padal.videoLink, '_blank');
    }
  }

  viewSongDetail(song: Padal) {
    this.selectedPadal = song;
  }

  async viewAllAbhiramiSongs() {
    const alert = await this.alertController.create({
      header: 'роЕрокро┐ро░ро╛рооро┐ роЕроирпНродро╛родро┐ - роорпБро┤рпБ родрпКроХрпБрокрпНрокрпБ',
      message: 'роЗродрпБ 100 рокро╛роЯро▓рпНроХро│ро┐ройрпН роорпБро┤рпБроорпИропро╛рой родрпКроХрпБрокрпНрокрпБ. роТро╡рпНро╡рпКро░рпБ рокро╛роЯро▓рпБроорпН роЕроорпНрокро┐роХрпИропро┐ройрпН ро╡рпЖро╡рпНро╡рпЗро▒рпБ роЕроорпНроЪроЩрпНроХро│рпИ ро╡ро┐ро╡ро░ро┐роХрпНроХро┐ро▒родрпБ. роорпБро┤рпБ рокро╛роЯро▓рпНроХро│рпИропрпБроорпН роХро╛рог ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?',
      buttons: [
        {
          text: 'роЗро▓рпНро▓рпИ',
          role: 'cancel'
        },
        {
          text: 'роЖроорпН',
          handler: () => {
            this.showAllAbhiramiSongs();
          }
        }
      ]
    });
    await alert.present();
  }

  async showAllAbhiramiSongs() {
    const ammanCategory = this.padalCategories.find(cat => cat.id === 'amman');
    const abhiramiPadal = ammanCategory?.mantras.find(m => m.id === 'abhirami_anthathi');
    
    if (abhiramiPadal?.individualSongs) {
      let songsHtml = '<div class="all-songs-container">';
      abhiramiPadal.individualSongs.forEach((song, index) => {
        songsHtml += `
          <div class="song-item">
            <h4>рокро╛роЯро▓рпН ${index + 1}: ${song.name}</h4>
            <p class="song-text">${song.text}</p>
            ${song.meaning ? `<p class="song-meaning"><strong>рокрпКро░рпБро│рпН:</strong> ${song.meaning}</p>` : ''}
            <div class="song-benefits">
              <strong>рокро▓ройрпНроХро│рпН:</strong> ${song.benefits.join(', ')}
            </div>
            <hr>
          </div>
        `;
      });
      songsHtml += '</div>';

      const alert = await this.alertController.create({
        header: 'роЕрокро┐ро░ро╛рооро┐ роЕроирпНродро╛родро┐ - роЕройрпИродрпНродрпБ рокро╛роЯро▓рпНроХро│рпН',
        message: songsHtml,
        cssClass: 'custom-alert-large',
        buttons: [
          {
            text: 'роироХро▓рпН роОроЯрпБ',
            handler: () => {
              const fullText = abhiramiPadal.individualSongs?.map((song, i) => 
                `рокро╛роЯро▓рпН ${i + 1}: ${song.name}\n${song.text}\n${song.meaning ? 'рокрпКро░рпБро│рпН: ' + song.meaning + '\n' : ''}рокро▓ройрпНроХро│рпН: ${song.benefits.join(', ')}\n\n`
              ).join('');
              navigator.clipboard.writeText(fullText || '').then(() => {
                this.presentToast('роЕройрпИродрпНродрпБ рокро╛роЯро▓рпНроХро│рпБроорпН роироХро▓рпЖроЯрпБроХрпНроХрокрпНрокроЯрпНроЯродрпБ');
              });
            }
          },
          {
            text: 'роорпВроЯрпБ',
            role: 'cancel'
          }
        ]
      });
      await alert.present();
    }
  }
}

{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-segment-view_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, j as Host, k as getElement } from './index-B_U9CtaY.js';\n\nconst segmentViewIosCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst segmentViewMdCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst SegmentView = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionSegmentViewScroll = createEvent(this, \"ionSegmentViewScroll\", 7);\n        this.scrollEndTimeout = null;\n        this.isTouching = false;\n        /**\n         * If `true`, the segment view cannot be interacted with.\n         */\n        this.disabled = false;\n    }\n    handleScroll(ev) {\n        var _a;\n        const { scrollLeft, scrollWidth, clientWidth } = ev.target;\n        const scrollRatio = scrollLeft / (scrollWidth - clientWidth);\n        this.ionSegmentViewScroll.emit({\n            scrollRatio,\n            isManualScroll: (_a = this.isManualScroll) !== null && _a !== void 0 ? _a : true,\n        });\n        // Reset the timeout to check for scroll end\n        this.resetScrollEndTimeout();\n    }\n    /**\n     * Handle touch start event to know when the user is actively dragging the segment view.\n     */\n    handleScrollStart() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.isTouching = true;\n    }\n    /**\n     * Handle touch end event to know when the user is no longer dragging the segment view.\n     */\n    handleTouchEnd() {\n        this.isTouching = false;\n    }\n    /**\n     * Reset the scroll end detection timer. This is called on every scroll event.\n     */\n    resetScrollEndTimeout() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.scrollEndTimeout = setTimeout(() => {\n            this.checkForScrollEnd();\n        }, \n        // Setting this to a lower value may result in inconsistencies in behavior\n        // across browsers (particularly Firefox).\n        // Ideally, all of this logic is removed once the scroll end event is\n        // supported on all browsers (https://caniuse.com/?search=scrollend)\n        100);\n    }\n    /**\n     * Check if the scroll has ended and the user is not actively touching.\n     * If the conditions are met (active content is enabled and no active touch),\n     * reset the scroll position and emit the scroll end event.\n     */\n    checkForScrollEnd() {\n        // Only emit scroll end event if the active content is not disabled and\n        // the user is not touching the segment view\n        if (!this.isTouching) {\n            this.isManualScroll = undefined;\n        }\n    }\n    /**\n     * @internal\n     *\n     * This method is used to programmatically set the displayed segment content\n     * in the segment view. Calling this method will update the `value` of the\n     * corresponding segment button.\n     *\n     * @param id: The id of the segment content to display.\n     * @param smoothScroll: Whether to animate the scroll transition.\n     */\n    async setContent(id, smoothScroll = true) {\n        const contents = this.getSegmentContents();\n        const index = contents.findIndex((content) => content.id === id);\n        if (index === -1)\n            return;\n        this.isManualScroll = false;\n        this.resetScrollEndTimeout();\n        const contentWidth = this.el.offsetWidth;\n        this.el.scrollTo({\n            top: 0,\n            left: index * contentWidth,\n            behavior: smoothScroll ? 'smooth' : 'instant',\n        });\n    }\n    getSegmentContents() {\n        return Array.from(this.el.querySelectorAll('ion-segment-content'));\n    }\n    render() {\n        const { disabled, isManualScroll } = this;\n        return (h(Host, { key: '754a374e89fd4dd682eb00497e717242a6f83357', class: {\n                'segment-view-disabled': disabled,\n                'segment-view-scroll-disabled': isManualScroll === false,\n            } }, h(\"slot\", { key: '77366044eb61f0d4bba305bd6f0ef8fd1e25194b' })));\n    }\n    get el() { return getElement(this); }\n};\nSegmentView.style = {\n    ios: segmentViewIosCss,\n    md: segmentViewMdCss\n};\n\nexport { SegmentView as ion_segment_view };\n"],"names":["r","registerInstance","d","createEvent","h","j","Host","k","getElement","segmentViewIosCss","segmentViewMdCss","SegmentView","constructor","hostRef","ionSegmentViewScroll","scrollEndTimeout","isTouching","disabled","handleScroll","ev","_a","scrollLeft","scrollWidth","clientWidth","target","scrollRatio","emit","isManualScroll","resetScrollEndTimeout","handleScrollStart","clearTimeout","handleTouchEnd","setTimeout","checkForScrollEnd","undefined","setContent","_x","_this","_asyncToGenerator","id","smoothScroll","contents","getSegmentContents","index","findIndex","content","contentWidth","el","offsetWidth","scrollTo","top","left","behavior","apply","arguments","Array","from","querySelectorAll","render","key","class","style","ios","md","ion_segment_view"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}
{
  "version": 3,
  "sources": ["src/app/services/users.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface User {\r\n  id?: number;\r\n  username: string;\r\n  password?: string;\r\n  role: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n  birthDate?: string;\r\n  birthTime?: string;\r\n  birthPlace?: string;\r\n  profilePicture?: string;\r\n  bio?: string;\r\n  userType: 'student' | 'instructor' | 'admin';\r\n  zodiacSign?: string;\r\n  risingSign?: string;\r\n  moonSign?: string;\r\n  createdDate?: string;\r\n  updatedDate?: string;\r\n  createdBy?: string;\r\n  updatedBy?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = `${environment.apiUrl}/login`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiUrl);\r\n  }\r\n\r\n  getUserById(id: number): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.apiUrl, user);\r\n  }\r\n\r\n  updateUser(id: number, user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/${id}`, user);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  searchUsers(query: string): Observable<User[]> {\r\n    // Don't make API call if query is empty\r\n    if (!query || query.trim() === '') {\r\n      return new Observable<User[]>(subscriber => {\r\n        subscriber.next([]);\r\n        subscriber.complete();\r\n      });\r\n    }\r\n    console.log('Searching users with query:', query);\r\n    return this.http.get<User[]>(`${this.apiUrl}/search?query=${query}`);\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;AA+BM,IAAO,cAAP,MAAO,aAAW;EAGF;EAFZ,SAAS,GAAG,YAAY,MAAM;EAEtC,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;EAExC,cAAW;AACT,WAAO,KAAK,KAAK,IAAY,KAAK,MAAM;EAC1C;EAEA,YAAY,IAAU;AACpB,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EACnD;EAEA,WAAW,MAAU;AACnB,WAAO,KAAK,KAAK,KAAW,KAAK,QAAQ,IAAI;EAC/C;EAEA,WAAW,IAAY,MAAU;AAC/B,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,IAAI;EACzD;EAEA,WAAW,IAAU;AACnB,WAAO,KAAK,KAAK,OAAO,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;EAChD;EAEA,YAAY,OAAa;AAEvB,QAAI,CAAC,SAAS,MAAM,KAAI,MAAO,IAAI;AACjC,aAAO,IAAI,WAAmB,gBAAa;AACzC,mBAAW,KAAK,CAAA,CAAE;AAClB,mBAAW,SAAQ;MACrB,CAAC;IACH;AACA,YAAQ,IAAI,+BAA+B,KAAK;AAChD,WAAO,KAAK,KAAK,IAAY,GAAG,KAAK,MAAM,iBAAiB,KAAK,EAAE;EACrE;;qCAnCW,cAAW,mBAAA,UAAA,CAAA;EAAA;4EAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;;",
  "names": []
}

{"version":3,"sources":["src/app/pages/lessons/lesson-list/lesson-list.component.ts","node_modules/@angular/cdk/fesm2022/accordion.mjs","node_modules/@angular/material/fesm2022/expansion.mjs","src/app/services/lesson-tag.service.ts","src/app/pages/lessons/add-lesson/add-lesson.component.ts","src/app/pages/lessons/lessons.routes.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { Observable, startWith, switchMap, debounceTime, distinctUntilChanged, of } from 'rxjs';\r\nimport { LessonService, Lesson } from '../../../services/lesson.service';\r\nimport { TopicService, Topic } from '../../../services/topic.service';\r\n\r\n@Component({\r\n  selector: 'app-lesson-list',\r\n  standalone: true,  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">      <div class=\"header\">\r\n        <h1>Lessons</h1>\r\n        <button \r\n          mat-raised-button \r\n          color=\"primary\" \r\n          (click)=\"navigateToAddLesson()\" \r\n          [disabled]=\"!selectedTopic\"\r\n        >\r\n          <mat-icon>add</mat-icon>\r\n          Add Lesson\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card class=\"filter-card\">\r\n        <mat-card-content>\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Search Topic</mat-label>\r\n            <input\r\n              type=\"text\"\r\n              matInput\r\n              [formControl]=\"topicSearchControl\"\r\n              [matAutocomplete]=\"auto\"\r\n              placeholder=\"Type to search topics...\"\r\n            />\r\n            <mat-autocomplete\r\n              #auto=\"matAutocomplete\"\r\n              [displayWith]=\"displayTopicFn\"\r\n              (optionSelected)=\"onTopicSelected($event)\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let topic of filteredTopics | async\"\r\n                [value]=\"topic\"\r\n              >\r\n                {{ displayTopicFn(topic) }}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"selectedTopic\">\r\n        <mat-card-header>\r\n          <mat-card-title>Lessons for: {{ selectedTopic.title }}</mat-card-title>\r\n        </mat-card-header>        <mat-card-content>\r\n          <table mat-table [dataSource]=\"lessons\" class=\"full-width\">\r\n            <ng-container matColumnDef=\"lessonId\">\r\n              <th mat-header-cell *matHeaderCellDef>ID</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">{{lesson.lessonId}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"orderNumber\">\r\n              <th mat-header-cell *matHeaderCellDef>Order</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">{{lesson.orderNumber}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"title\">\r\n              <th mat-header-cell *matHeaderCellDef>Title</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">{{lesson.title}}</td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"contentType\">\r\n              <th mat-header-cell *matHeaderCellDef>Content Type</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">\r\n                <span class=\"content-type-badge\" [class]=\"'content-type-' + lesson.contentType\">\r\n                  {{lesson.contentType | titlecase}}\r\n                </span>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"duration\">\r\n              <th mat-header-cell *matHeaderCellDef>Duration</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">\r\n                {{lesson.durationMinutes ? lesson.durationMinutes + ' min' : '-'}}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"isFree\">\r\n              <th mat-header-cell *matHeaderCellDef>Free</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">\r\n                <mat-icon [color]=\"lesson.isFree ? 'primary' : 'warn'\">\r\n                  {{lesson.isFree ? 'check_circle' : 'lock'}}\r\n                </mat-icon>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"createdAt\">\r\n              <th mat-header-cell *matHeaderCellDef>Created</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">{{lesson.createdAt | date:'short'}}</td>\r\n            </ng-container>            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n              <td mat-cell *matCellDef=\"let lesson\">\r\n                <button \r\n                  mat-icon-button \r\n                  color=\"primary\" \r\n                  (click)=\"navigateToEditLesson(lesson.lessonId)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n                <button mat-icon-button color=\"warn\" (click)=\"deleteLesson(lesson.lessonId)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n          </table>\r\n\r\n          <div *ngIf=\"lessons.length === 0\" class=\"no-data\">\r\n            <p>No lessons found for this topic.</p>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"!selectedTopic\" class=\"placeholder-card\">\r\n        <mat-card-content>\r\n          <div class=\"no-data\">\r\n            <mat-icon>play_lesson</mat-icon>\r\n            <p>Please select a topic to view its lessons.</p>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      padding: 20px;\r\n    }\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    .full-width {\r\n      width: 100%;\r\n    }\r\n    .filter-card {\r\n      margin-bottom: 20px;\r\n    }\r\n    .no-data {\r\n      text-align: center;\r\n      padding: 40px;\r\n      color: #666;\r\n    }\r\n    .no-data mat-icon {\r\n      font-size: 48px;\r\n      height: 48px;\r\n      width: 48px;\r\n      margin-bottom: 16px;\r\n    }\r\n    .placeholder-card {\r\n      margin-top: 20px;\r\n    }\r\n    .content-type-badge {\r\n      padding: 4px 8px;\r\n      border-radius: 12px;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n    }\r\n    .content-type-video {\r\n      background-color: #e3f2fd;\r\n      color: #1976d2;\r\n    }\r\n    .content-type-article {\r\n      background-color: #f3e5f5;\r\n      color: #7b1fa2;\r\n    }\r\n    .content-type-quiz {\r\n      background-color: #fff3e0;\r\n      color: #f57c00;\r\n    }\r\n    .content-type-exercise {\r\n      background-color: #e8f5e8;\r\n      color: #388e3c;\r\n    }\r\n  `]\r\n})\r\nexport class LessonListComponent implements OnInit {\r\n  lessons: Lesson[] = [];\r\n  selectedTopic: Topic | null = null;\r\n  topicSearchControl = new FormControl<string | Topic>('');\r\n  filteredTopics: Observable<Topic[]> = of([]);\r\n  displayedColumns: string[] = ['lessonId', 'orderNumber', 'title', 'contentType', 'duration', 'isFree', 'createdAt', 'actions'];\r\n  constructor(\r\n    private lessonService: LessonService,\r\n    private topicService: TopicService,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.setupTopicAutocomplete();\r\n    this.restoreSelectedTopic();\r\n  }  restoreSelectedTopic() {\r\n    // Check if there's a selected topic stored in history state\r\n    const navigationState = history.state;\r\n    if (navigationState && navigationState.selectedTopic) {\r\n      const topic = navigationState.selectedTopic as Topic;\r\n      this.selectedTopic = topic;\r\n      // Set the full topic object for the autocomplete to display properly\r\n      this.topicSearchControl.setValue(topic);\r\n      this.loadLessons();\r\n    }\r\n  }\r\n  setupTopicAutocomplete() {\r\n    this.filteredTopics = this.topicSearchControl.valueChanges.pipe(\r\n      startWith(''),\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap(value => this._filterTopics(value || ''))\r\n    );\r\n  }\r\n  private _filterTopics(value: string | Topic): Observable<Topic[]> {\r\n    // If value is a Topic object, extract the title for filtering\r\n    const filterValue = typeof value === 'string' ? value : value?.title || '';\r\n    \r\n    if (!filterValue || filterValue.trim() === '') {\r\n      return this.topicService.getAllTopics();\r\n    }\r\n    return this.topicService.getAllTopics();\r\n  }\r\n  displayTopicFn = (topic: Topic): string => {\r\n    if (!topic) return '';\r\n    const title = topic.title || 'Untitled';\r\n    const id = topic.topicId || 'N/A';\r\n    return `${title} (ID: ${id})`;\r\n  }\r\n  onTopicSelected(event: any) {\r\n    const topic = event.option.value as Topic;\r\n    this.selectedTopic = topic;\r\n    this.loadLessons();\r\n  }\r\n\r\n  navigateToAddLesson() {\r\n    if (this.selectedTopic) {\r\n      this.router.navigate(['lessons/add'], { \r\n        state: { selectedTopic: this.selectedTopic } \r\n      });\r\n    }\r\n  }\r\n\r\n  navigateToEditLesson(lessonId: number) {\r\n    this.router.navigate(['lessons/update', lessonId], { \r\n      state: { selectedTopic: this.selectedTopic } \r\n    });\r\n  }\r\n\r\n  loadLessons() {\r\n    if (this.selectedTopic) {\r\n      this.lessonService.getLessonsByTopicId(this.selectedTopic.topicId).subscribe({\r\n        next: (lessons) => {\r\n          // Convert createdAt and updatedAt to valid Date objects if needed\r\n          this.lessons = lessons.map(lesson => ({\r\n            ...lesson,\r\n            createdAt: parseBackendDate(lesson.createdAt),\r\n            updatedAt: parseBackendDate(lesson.updatedAt)\r\n          }));\r\n        },\r\n        error: () => {\r\n          this.snackBar.open('Error loading lessons', 'Close', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteLesson(lessonId: number) {\r\n    if (confirm('Are you sure you want to delete this lesson?')) {\r\n      this.lessonService.deleteLesson(lessonId).subscribe({\r\n        next: () => {\r\n          this.loadLessons();\r\n          this.snackBar.open('Lesson deleted successfully', 'Close', {\r\n            duration: 3000\r\n          });\r\n        },\r\n        error: () => {\r\n          this.snackBar.open('Error deleting lesson', 'Close', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Helper function to parse backend date string\r\nfunction parseBackendDate(date: any): Date | null {\r\n  if (!date) return null;\r\n  if (date instanceof Date) return date;\r\n  if (typeof date === 'string' && date.includes(',')) {\r\n    // Format: \"2025,6,12,14,52,43\" (year,month,day,hour,min,sec)\r\n    const parts = date.split(',').map(Number);\r\n    if (parts.length >= 3) {\r\n      // Note: JS months are 0-based\r\n      return new Date(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0);\r\n    }\r\n  }\r\n  // Try native Date parse as fallback\r\n  const d = new Date(date);\r\n  return isNaN(d.getTime()) ? null : d;\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n  constructor() {\n    /** Emits when the state of the accordion changes */\n    this._stateChanges = new Subject();\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n    this._openCloseAllActions = new Subject();\n    /** A readonly id value to use for unique selection coordination. */\n    this.id = `cdk-accordion-${nextId$1++}`;\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    this.multi = false;\n  }\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll() {\n    if (this.multi) {\n      this._openCloseAllActions.next(true);\n    }\n  }\n  /** Closes all enabled accordion items. */\n  closeAll() {\n    this._openCloseAllActions.next(false);\n  }\n  ngOnChanges(changes) {\n    this._stateChanges.next(changes);\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._openCloseAllActions.complete();\n  }\n  static {\n    this.ɵfac = function CdkAccordion_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkAccordion)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkAccordion,\n      selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n      inputs: {\n        multi: [2, \"multi\", \"multi\", booleanAttribute]\n      },\n      exportAs: [\"cdkAccordion\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CDK_ACCORDION,\n        useExisting: CdkAccordion\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion, [cdkAccordion]',\n      exportAs: 'cdkAccordion',\n      providers: [{\n        provide: CDK_ACCORDION,\n        useExisting: CdkAccordion\n      }],\n      standalone: true\n    }]\n  }], null, {\n    multi: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n  /** Whether the AccordionItem is expanded. */\n  get expanded() {\n    return this._expanded;\n  }\n  set expanded(expanded) {\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n    this.accordion = accordion;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._expansionDispatcher = _expansionDispatcher;\n    /** Subscription to openAll/closeAll events. */\n    this._openCloseAllSubscription = Subscription.EMPTY;\n    /** Event emitted every time the AccordionItem is closed. */\n    this.closed = new EventEmitter();\n    /** Event emitted every time the AccordionItem is opened. */\n    this.opened = new EventEmitter();\n    /** Event emitted when the AccordionItem is destroyed. */\n    this.destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * @docs-private\n     */\n    this.expandedChange = new EventEmitter();\n    /** The unique AccordionItem id. */\n    this.id = `cdk-accordion-child-${nextId++}`;\n    this._expanded = false;\n    /** Whether the AccordionItem is disabled. */\n    this.disabled = false;\n    /** Unregister function for _expansionDispatcher. */\n    this._removeUniqueSelectionListener = () => {};\n    this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n      if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n        this.expanded = false;\n      }\n    });\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n  /** Toggles the expanded state of the accordion item. */\n  toggle() {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n  /** Sets the expanded state of the accordion item to false. */\n  close() {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n  /** Sets the expanded state of the accordion item to true. */\n  open() {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n  _subscribeToOpenCloseAllActions() {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CdkAccordionItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkAccordionItem)(i0.ɵɵdirectiveInject(CDK_ACCORDION, 12), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UniqueSelectionDispatcher));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CdkAccordionItem,\n      selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n      inputs: {\n        expanded: [2, \"expanded\", \"expanded\", booleanAttribute],\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        closed: \"closed\",\n        opened: \"opened\",\n        destroyed: \"destroyed\",\n        expandedChange: \"expandedChange\"\n      },\n      exportAs: [\"cdkAccordionItem\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([\n      // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n      // registering to the same accordion.\n      {\n        provide: CDK_ACCORDION,\n        useValue: undefined\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion-item, [cdkAccordionItem]',\n      exportAs: 'cdkAccordionItem',\n      providers: [\n      // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n      // registering to the same accordion.\n      {\n        provide: CDK_ACCORDION,\n        useValue: undefined\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: CdkAccordion,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CDK_ACCORDION]\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.UniqueSelectionDispatcher\n  }], {\n    closed: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass CdkAccordionModule {\n  static {\n    this.ɵfac = function CdkAccordionModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CdkAccordionModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CdkAccordionModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkAccordion, CdkAccordionItem],\n      exports: [CdkAccordion, CdkAccordionItem]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, numberAttribute, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst _c0 = [\"body\"];\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatExpansionPanelHeader_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 2);\n    i0.ɵɵelement(2, \"path\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: trigger('indicatorRotate', [state('collapsed, void', style({\n    transform: 'rotate(0deg)'\n  })), state('expanded', style({\n    transform: 'rotate(180deg)'\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: trigger('bodyExpansion', [state('collapsed, void', style({\n    height: '0px',\n    visibility: 'hidden'\n  })),\n  // Clear the `visibility` while open, otherwise the content will be visible when placed in\n  // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n  // that have a `visibility` of their own (see #27436).\n  state('expanded', style({\n    height: '*',\n    visibility: ''\n  })), transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n  constructor(_template, _expansionPanel) {\n    this._template = _template;\n    this._expansionPanel = _expansionPanel;\n  }\n  static {\n    this.ɵfac = function MatExpansionPanelContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanelContent)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatExpansionPanelContent,\n      selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_EXPANSION_PANEL]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n  /** Whether the toggle indicator should be hidden. */\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n  set hideToggle(value) {\n    this._hideToggle = value;\n  }\n  /** The position of the expansion indicator. */\n  get togglePosition() {\n    return this._togglePosition || this.accordion && this.accordion.togglePosition;\n  }\n  set togglePosition(value) {\n    this._togglePosition = value;\n  }\n  constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this._viewContainerRef = _viewContainerRef;\n    this._animationMode = _animationMode;\n    this._hideToggle = false;\n    /** An event emitted after the body's expansion animation happens. */\n    this.afterExpand = new EventEmitter();\n    /** An event emitted after the body's collapse animation happens. */\n    this.afterCollapse = new EventEmitter();\n    /** Stream that emits for changes in `@Input` properties. */\n    this._inputChanges = new Subject();\n    /** ID for the associated header element. Used for a11y labelling. */\n    this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n    this.accordion = accordion;\n    this._document = _document;\n    this._animationsDisabled = _animationMode === 'NoopAnimations';\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n  _hasSpacing() {\n    if (this.accordion) {\n      return this.expanded && this.accordion.displayMode === 'default';\n    }\n    return false;\n  }\n  /** Gets the expanded state string. */\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /** Toggles the expanded state of the expansion panel. */\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n  /** Sets the expanded state of the expansion panel to false. */\n  close() {\n    this.expanded = false;\n  }\n  /** Sets the expanded state of the expansion panel to true. */\n  open() {\n    this.expanded = true;\n  }\n  ngAfterContentInit() {\n    if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n  }\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\n  _containsFocus() {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n    return false;\n  }\n  /** Called when the expansion animation has started. */\n  _animationStarted(event) {\n    if (!isInitialAnimation(event) && !this._animationsDisabled && this._body) {\n      // Prevent the user from tabbing into the content while it's animating.\n      // TODO(crisbeto): maybe use `inert` to prevent focus from entering while closed as well\n      // instead of `visibility`? Will allow us to clean up some code but needs more testing.\n      this._body?.nativeElement.setAttribute('inert', '');\n    }\n  }\n  /** Called when the expansion animation has finished. */\n  _animationDone(event) {\n    if (!isInitialAnimation(event)) {\n      if (event.toState === 'expanded') {\n        this.afterExpand.emit();\n      } else if (event.toState === 'collapsed') {\n        this.afterCollapse.emit();\n      }\n      // Re-enable tabbing once the animation is finished.\n      if (!this._animationsDisabled && this._body) {\n        this._body.nativeElement.removeAttribute('inert');\n      }\n    }\n  }\n  static {\n    this.ɵfac = function MatExpansionPanel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanel)(i0.ɵɵdirectiveInject(MAT_ACCORDION, 12), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UniqueSelectionDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatExpansionPanel,\n      selectors: [[\"mat-expansion-panel\"]],\n      contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n        }\n      },\n      viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._body = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-expansion-panel\"],\n      hostVars: 6,\n      hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationsDisabled)(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n        }\n      },\n      inputs: {\n        hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n        togglePosition: \"togglePosition\"\n      },\n      outputs: {\n        afterExpand: \"afterExpand\",\n        afterCollapse: \"afterCollapse\"\n      },\n      exportAs: [\"matExpansionPanel\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([\n      // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: undefined\n      }, {\n        provide: MAT_EXPANSION_PANEL,\n        useExisting: MatExpansionPanel\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 7,\n      vars: 4,\n      consts: [[\"body\", \"\"], [\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n      template: function MatExpansionPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"div\", 1, 0);\n          i0.ɵɵlistener(\"@bodyExpansion.start\", function MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._animationStarted($event));\n          })(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._animationDone($event));\n          });\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵprojection(4, 1);\n          i0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(6, 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n          i0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n        }\n      },\n      dependencies: [CdkPortalOutlet],\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color, var(--mat-app-surface));color:var(--mat-expansion-container-text-color, var(--mat-app-on-surface));border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font, var(--mat-app-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-app-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-app-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-app-body-large-tracking))}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-app-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matExpansionAnimations.bodyExpansion]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.bodyExpansion],\n      providers: [\n      // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: undefined\n      }, {\n        provide: MAT_EXPANSION_PANEL,\n        useExisting: MatExpansionPanel\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      standalone: true,\n      imports: [CdkPortalOutlet],\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color, var(--mat-app-surface));color:var(--mat-expansion-container-text-color, var(--mat-app-on-surface));border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font, var(--mat-app-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-app-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-app-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-app-body-large-tracking))}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-app-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [MAT_ACCORDION]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.UniqueSelectionDispatcher\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }], {\n    hideToggle: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }]\n  });\n})();\n/** Checks whether an animation is the initial setup animation. */\nfunction isInitialAnimation(event) {\n  return event.fromState === 'void';\n}\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n  static {\n    this.ɵfac = function MatExpansionPanelActionRow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanelActionRow)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatExpansionPanelActionRow,\n      selectors: [[\"mat-action-row\"]],\n      hostAttrs: [1, \"mat-action-row\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n  constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n    this.panel = panel;\n    this._element = _element;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    this._parentChangeSubscription = Subscription.EMPTY;\n    /** Tab index of the header. */\n    this.tabIndex = 0;\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) : EMPTY;\n    this.tabIndex = parseInt(tabIndex || '') || 0;\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n      return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n    }))).subscribe(() => this._changeDetectorRef.markForCheck());\n    // Avoids focus being lost if the panel contained the focused element and was closed.\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /** Toggles the expanded state of the panel. */\n  _toggle() {\n    if (!this.disabled) {\n      this.panel.toggle();\n    }\n  }\n  /** Gets whether the panel is expanded. */\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /** Gets the expanded state string of the panel. */\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /** Gets the panel id. */\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /** Gets the toggle position for the header. */\n  _getTogglePosition() {\n    return this.panel.togglePosition;\n  }\n  /** Gets whether the expand indicator should be shown. */\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Gets the current height of the header. Null if no custom height has been\n   * specified, and if the default height from the stylesheet should be used.\n   */\n  _getHeaderHeight() {\n    const isExpanded = this._isExpanded();\n    if (isExpanded && this.expandedHeight) {\n      return this.expandedHeight;\n    } else if (!isExpanded && this.collapsedHeight) {\n      return this.collapsedHeight;\n    }\n    return null;\n  }\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n  focus(origin, options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._element).subscribe(origin => {\n      if (origin && this.panel.accordion) {\n        this.panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n  static {\n    this.ɵfac = function MatExpansionPanelHeader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanelHeader)(i0.ɵɵdirectiveInject(MatExpansionPanel, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵinjectAttribute('tabindex'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatExpansionPanelHeader,\n      selectors: [[\"mat-expansion-panel-header\"]],\n      hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"],\n      hostVars: 15,\n      hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n            return ctx._toggle();\n          })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n            return ctx._keydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n          i0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n          i0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        expandedHeight: \"expandedHeight\",\n        collapsedHeight: \"collapsedHeight\",\n        tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c4,\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"mat-content\"], [1, \"mat-expansion-indicator\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 -960 960 960\", \"aria-hidden\", \"true\", \"focusable\", \"false\"], [\"d\", \"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\"]],\n      template: function MatExpansionPanelHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵelementStart(0, \"span\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵprojection(3, 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, MatExpansionPanelHeader_Conditional_4_Template, 3, 1, \"span\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-content-hide-toggle\", !ctx._showToggle());\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(ctx._showToggle() ? 4 : -1);\n        }\n      },\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font, var(--mat-app-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-app-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-app-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-app-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-app-title-medium-tracking))}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-app-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-app-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-app-on-surface-variant))}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matExpansionAnimations.indicatorRotate]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [matExpansionAnimations.indicatorRotate],\n      host: {\n        'class': 'mat-expansion-panel-header mat-focus-indicator',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[style.height]': '_getHeaderHeight()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)'\n      },\n      standalone: true,\n      template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\",\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font, var(--mat-app-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-app-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-app-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-app-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-app-title-medium-tracking))}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-app-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-app-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-app-on-surface-variant))}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"]\n    }]\n  }], () => [{\n    type: MatExpansionPanel,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i2.FocusMonitor\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }], {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }]\n  });\n})();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n  static {\n    this.ɵfac = function MatExpansionPanelDescription_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanelDescription)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatExpansionPanelDescription,\n      selectors: [[\"mat-panel-description\"]],\n      hostAttrs: [1, \"mat-expansion-panel-header-description\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n  static {\n    this.ɵfac = function MatExpansionPanelTitle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionPanelTitle)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatExpansionPanelTitle,\n      selectors: [[\"mat-panel-title\"]],\n      hostAttrs: [1, \"mat-expansion-panel-header-title\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n  constructor() {\n    super(...arguments);\n    /** Headers belonging to this accordion. */\n    this._ownHeaders = new QueryList();\n    /** Whether the expansion indicator should be hidden. */\n    this.hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n    this.displayMode = 'default';\n    /** The position of the expansion indicator. */\n    this.togglePosition = 'after';\n  }\n  ngAfterContentInit() {\n    this._headers.changes.pipe(startWith(this._headers)).subscribe(headers => {\n      this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n      this._ownHeaders.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n  }\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown(event) {\n    this._keyManager.onKeydown(event);\n  }\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._keyManager?.destroy();\n    this._ownHeaders.destroy();\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatAccordion_BaseFactory;\n      return function MatAccordion_Factory(__ngFactoryType__) {\n        return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = i0.ɵɵgetInheritedFactory(MatAccordion)))(__ngFactoryType__ || MatAccordion);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAccordion,\n      selectors: [[\"mat-accordion\"]],\n      contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headers = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-accordion\"],\n      hostVars: 2,\n      hostBindings: function MatAccordion_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n        }\n      },\n      inputs: {\n        hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n        displayMode: \"displayMode\",\n        togglePosition: \"togglePosition\"\n      },\n      exportAs: [\"matAccordion\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if multiple panel support is enabled.\n        '[class.mat-accordion-multi]': 'this.multi'\n      },\n      standalone: true\n    }]\n  }], null, {\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }],\n    hideToggle: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    displayMode: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }]\n  });\n})();\nclass MatExpansionModule {\n  static {\n    this.ɵfac = function MatExpansionModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatExpansionModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatExpansionModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CdkAccordionModule, PortalModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkAccordionModule, PortalModule, MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface LessonTag {\r\n  lessonTagId?: number;\r\n  lessonId: number;\r\n  tagId: number;\r\n  relevanceScore?: number;\r\n  tagName?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LessonTagService {\r\n  private apiUrl = `${environment.apiUrl}/lesson-tags`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTagsByLessonId(lessonId: number): Observable<LessonTag[]> {\r\n    return this.http.get<LessonTag[]>(`${this.apiUrl}/lesson/${lessonId}`);\r\n  }\r\n\r\n  addLessonTag(lessonTag: LessonTag): Observable<LessonTag> {\r\n    return this.http.post<LessonTag>(this.apiUrl, lessonTag);\r\n  }\r\n\r\n  updateLessonTag(lessonTagId: number, lessonTag: LessonTag): Observable<LessonTag> {\r\n    return this.http.put<LessonTag>(`${this.apiUrl}/${lessonTagId}`, lessonTag);\r\n  }\r\n\r\n  deleteLessonTag(lessonTagId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${lessonTagId}`);\r\n  }\r\n}\r\n","import { Component, OnInit, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormArray } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable, debounceTime, distinctUntilChanged, startWith, switchMap, of } from 'rxjs';\r\nimport { LessonService, Lesson } from '../../../services/lesson.service';\r\nimport { TopicService, Topic } from '../../../services/topic.service';\r\nimport { LessonKeynoteService, LessonKeynote } from '../../../services/lesson-keynote.service';\r\nimport { LessonTagService, LessonTag } from '../../../services/lesson-tag.service';\r\nimport { KeynoteTagService, KeynoteTag } from '../../../services/keynote-tag.service';\r\nimport { TagService, Tag } from '../../../services/tag.service';\r\nimport { CourseService, Course } from '../../../services/course.service';\r\n\r\n@Component({\r\n  selector: 'app-add-lesson',\r\n  standalone: true,  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n    MatProgressSpinnerModule,\r\n    QuillModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">      <div class=\"header\">\r\n        <h1>{{ isEditMode ? 'Edit Lesson' + (lessonId ? ' (ID: ' + lessonId + ')' : '') : 'Add New Lesson' }}</h1>\r\n        <button mat-button (click)=\"goBack()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n          Back to Lessons\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Lesson Information</mat-card-title>\r\n        </mat-card-header>        <mat-card-content>\r\n          <div *ngIf=\"loading\" class=\"loading-container\">\r\n            <mat-spinner></mat-spinner>\r\n            <p>Loading lesson data...</p>\r\n          </div>\r\n\r\n          <form *ngIf=\"!loading\" [formGroup]=\"lessonForm\" (ngSubmit)=\"onSubmit()\">            <!-- Lesson Basic Information -->\r\n            <div class=\"section\">\r\n              <h3 class=\"section-title\">\r\n                <mat-icon>info</mat-icon>\r\n                Lesson Information\r\n              </h3>\r\n              \r\n              <!-- Course Selection -->\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Search Course</mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"courseSearch\"\r\n                  [matAutocomplete]=\"courseAuto\"\r\n                  placeholder=\"Type to search courses...\"\r\n                />\r\n                <mat-autocomplete\r\n                  #courseAuto=\"matAutocomplete\"\r\n                  [displayWith]=\"displayCourseFn\"\r\n                  (optionSelected)=\"onCourseSelected($event)\"\r\n                >\r\n                  <mat-option\r\n                    *ngFor=\"let course of filteredCourses | async\"\r\n                    [value]=\"course\"\r\n                  >\r\n                    {{ displayCourseFn(course) }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-icon matSuffix>school</mat-icon>\r\n                <mat-hint>Select a course to filter topics</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Course ID</mat-label>\r\n                <input matInput formControlName=\"courseId\" readonly />\r\n                <mat-hint>Selected from course search above</mat-hint>\r\n              </mat-form-field>\r\n              \r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Search Topic</mat-label>\r\n                <input\r\n                  type=\"text\"\r\n                  matInput\r\n                  formControlName=\"topicSearch\"\r\n                  [matAutocomplete]=\"auto\"\r\n                  placeholder=\"Type to search topics...\"\r\n                  [disabled]=\"!lessonForm.get('courseId')?.value\"\r\n                />\r\n                <mat-autocomplete\r\n                  #auto=\"matAutocomplete\"\r\n                  [displayWith]=\"displayTopicFn\"\r\n                  (optionSelected)=\"onTopicSelected($event)\"\r\n                >\r\n                  <mat-option\r\n                    *ngFor=\"let topic of filteredTopics | async\"\r\n                    [value]=\"topic\"\r\n                  >\r\n                    {{ displayTopicFn(topic) }}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n                <mat-icon matSuffix>search</mat-icon>\r\n                <mat-hint *ngIf=\"!lessonForm.get('courseId')?.value\" class=\"course-warning\">\r\n                  Please select a course first to view available topics\r\n                </mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Topic ID</mat-label>\r\n                <input matInput formControlName=\"topicId\" required readonly />\r\n                <mat-hint>Selected from topic search above</mat-hint>\r\n                <mat-error *ngIf=\"lessonForm.get('topicId')?.hasError('required')\">\r\n                  Topic selection is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Title</mat-label>\r\n                <input matInput formControlName=\"title\" required placeholder=\"Enter lesson title...\" />\r\n                <mat-error *ngIf=\"lessonForm.get('title')?.hasError('required')\">\r\n                  Title is required\r\n                </mat-error>              </mat-form-field>\r\n\r\n              <div class=\"rich-text-field\">\r\n                <label class=\"rich-text-label\">Description</label>\r\n                <div class=\"rich-text-container\">\r\n                  <quill-editor \r\n                    formControlName=\"description\"\r\n                    [modules]=\"quillModules\"\r\n                    placeholder=\"Enter lesson description...\"\r\n                    theme=\"snow\"\r\n                  ></quill-editor>\r\n                </div>\r\n              </div>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Content Type</mat-label>\r\n                <mat-select formControlName=\"contentType\" required>\r\n                  <mat-option value=\"video\">Video</mat-option>\r\n                  <mat-option value=\"article\">Article</mat-option>\r\n                  <mat-option value=\"quiz\">Quiz</mat-option>\r\n                  <mat-option value=\"exercise\">Exercise</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"lessonForm.get('contentType')?.hasError('required')\">\r\n                  Content type is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Content URL</mat-label>\r\n                <input matInput formControlName=\"contentUrl\" type=\"url\" placeholder=\"https://example.com/content\" />\r\n                <mat-hint>URL to the lesson content (video, article, etc.)</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Duration (minutes)</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"durationMinutes\" min=\"0\" placeholder=\"0\" />\r\n                <mat-hint>Estimated time to complete this lesson</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\" *ngIf=\"isEditMode\">\r\n                <mat-label>Order Number</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"orderNumber\" min=\"1\" />\r\n                <mat-hint>Position of this lesson within the topic</mat-hint>\r\n              </mat-form-field>\r\n\r\n              <div class=\"checkbox-container\">\r\n                <mat-checkbox formControlName=\"isFree\" class=\"full-width\">\r\n                  <strong>Free lesson</strong> (accessible without payment)\r\n                </mat-checkbox>\r\n              </div>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <!-- Keynotes Section -->\r\n            <div class=\"section\">\r\n              <div class=\"section-header\">\r\n                <h3 class=\"section-title\">\r\n                  <mat-icon>note_alt</mat-icon>\r\n                  Lesson Keynotes\r\n                </h3>\r\n                <button \r\n                  mat-raised-button \r\n                  color=\"accent\" \r\n                  type=\"button\" \r\n                  (click)=\"addKeynote()\"\r\n                  class=\"add-keynote-btn\"\r\n                >\r\n                  <mat-icon>add</mat-icon>\r\n                  Add Keynote\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"keynotes-container\" formArrayName=\"keynotes\">\r\n                <mat-expansion-panel \r\n                  *ngFor=\"let keynote of keynotes.controls; let i = index\" \r\n                  [formGroupName]=\"i\"\r\n                  class=\"keynote-panel\"\r\n                  [expanded]=\"keynote.get('isNew')?.value\"\r\n                >\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      <div class=\"keynote-title-container\">\r\n                        <mat-icon class=\"keynote-icon\">note_alt</mat-icon>\r\n                        <span class=\"keynote-title\">\r\n                          {{ keynote.get('title')?.value || 'New Keynote' }}\r\n                        </span>\r\n                        <mat-chip \r\n                          *ngIf=\"keynote.get('isImportant')?.value\" \r\n                          class=\"important-chip\"\r\n                        >\r\n                          <mat-icon>star</mat-icon>\r\n                          Important\r\n                        </mat-chip>\r\n                        <mat-chip \r\n                          class=\"content-type-chip\"\r\n                          [ngClass]=\"'content-type-' + keynote.get('contentType')?.value\"\r\n                        >\r\n                          {{ getContentTypeLabel(keynote.get('contentType')?.value) }}\r\n                        </mat-chip>\r\n                      </div>\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                      <span class=\"keynote-preview\">\r\n                        {{ getKeynotePreview(keynote.get('content')?.value) }}\r\n                      </span>\r\n                    </mat-panel-description>\r\n                  </mat-expansion-panel-header>                  <div class=\"keynote-form\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Title</mat-label>\r\n                      <input matInput formControlName=\"title\" required />\r\n                      <mat-error *ngIf=\"keynote.get('title')?.hasError('required')\">\r\n                        Title is required\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Content Type</mat-label>\r\n                      <mat-select formControlName=\"contentType\" required>\r\n                        <mat-option value=\"text\">Text</mat-option>\r\n                        <mat-option value=\"bullet_points\">Bullet Points</mat-option>\r\n                        <mat-option value=\"quote\">Quote</mat-option>\r\n                        <mat-option value=\"example\">Example</mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"keynote.get('contentType')?.hasError('required')\">\r\n                        Content type is required\r\n                      </mat-error>                    </mat-form-field>\r\n\r\n                    <div class=\"rich-text-field keynote-field\">\r\n                      <label class=\"rich-text-label\">Content</label>\r\n                      <div class=\"rich-text-container keynote-editor\">\r\n                        <quill-editor \r\n                          formControlName=\"content\"\r\n                          [modules]=\"quillModules\"\r\n                          [placeholder]=\"getContentPlaceholder(keynote.get('contentType')?.value)\"\r\n                          theme=\"snow\"\r\n                        ></quill-editor>\r\n                      </div>\r\n                      <div class=\"rich-text-hint\">{{ getContentHint(keynote.get('contentType')?.value) }}</div>\r\n                      <div class=\"rich-text-error\" *ngIf=\"keynote.get('content')?.hasError('required')\">\r\n                        Content is required\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-row\">\r\n                      <mat-checkbox formControlName=\"isImportant\" class=\"checkbox-field\">\r\n                        Mark as Important\r\n                      </mat-checkbox>\r\n                      \r\n                      <mat-checkbox formControlName=\"hasVisualAid\" class=\"checkbox-field\">\r\n                        Has Visual Aid\r\n                      </mat-checkbox>\r\n                    </div>                    <mat-form-field \r\n                      appearance=\"outline\" \r\n                      class=\"full-width\" \r\n                      *ngIf=\"keynote.get('hasVisualAid')?.value\"\r\n                    >\r\n                      <mat-label>Visual Aid URL</mat-label>\r\n                      <input matInput formControlName=\"visualAidUrl\" type=\"url\" />\r\n                      <mat-hint>URL to an image, diagram, or visual aid</mat-hint>\r\n                    </mat-form-field>                    <div class=\"form-row\">\r\n                      <mat-form-field appearance=\"outline\" class=\"half-width\">\r\n                        <mat-label>Related Planet</mat-label>\r\n                        <mat-select formControlName=\"relatedPlanet\">\r\n                          <mat-option value=\"\">None</mat-option>\r\n                          <mat-option value=\"Sun\">Sun</mat-option>\r\n                          <mat-option value=\"Moon\">Moon</mat-option>\r\n                          <mat-option value=\"Mars\">Mars</mat-option>\r\n                          <mat-option value=\"Mercury\">Mercury</mat-option>\r\n                          <mat-option value=\"Jupiter\">Jupiter</mat-option>\r\n                          <mat-option value=\"Venus\">Venus</mat-option>\r\n                          <mat-option value=\"Saturn\">Saturn</mat-option>\r\n                          <mat-option value=\"Rahu\">Rahu</mat-option>\r\n                          <mat-option value=\"Ketu\">Ketu</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n\r\n                      <mat-form-field appearance=\"outline\" class=\"half-width\">\r\n                        <mat-label>Related Zodiac</mat-label>\r\n                        <mat-select formControlName=\"relatedZodiac\">\r\n                          <mat-option value=\"\">None</mat-option>\r\n                          <mat-option value=\"Aries\">Aries</mat-option>\r\n                          <mat-option value=\"Taurus\">Taurus</mat-option>\r\n                          <mat-option value=\"Gemini\">Gemini</mat-option>\r\n                          <mat-option value=\"Cancer\">Cancer</mat-option>\r\n                          <mat-option value=\"Leo\">Leo</mat-option>\r\n                          <mat-option value=\"Virgo\">Virgo</mat-option>\r\n                          <mat-option value=\"Libra\">Libra</mat-option>\r\n                          <mat-option value=\"Scorpio\">Scorpio</mat-option>\r\n                          <mat-option value=\"Sagittarius\">Sagittarius</mat-option>\r\n                          <mat-option value=\"Capricorn\">Capricorn</mat-option>\r\n                          <mat-option value=\"Aquarius\">Aquarius</mat-option>\r\n                          <mat-option value=\"Pisces\">Pisces</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- Keynote Tags Section -->\r\n                    <div class=\"keynote-tags-section\">\r\n                      <div class=\"section-header\">\r\n                        <h4 class=\"section-subtitle\">\r\n                          <mat-icon>local_offer</mat-icon>\r\n                          Keynote Tags\r\n                        </h4>\r\n                        <button \r\n                          mat-button \r\n                          color=\"accent\" \r\n                          type=\"button\" \r\n                          (click)=\"addKeynoteTag(i)\"\r\n                          class=\"add-keynote-tag-btn\"\r\n                        >\r\n                          <mat-icon>add</mat-icon>\r\n                          Add Tag\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div class=\"keynote-tags-container\" formArrayName=\"keynoteTags\">\r\n                        <div \r\n                          *ngFor=\"let keynoteTag of getKeynoteTags(i).controls; let j = index\" \r\n                          [formGroupName]=\"j\"\r\n                          class=\"keynote-tag-item\"\r\n                        >\r\n                          <mat-form-field appearance=\"outline\" class=\"tag-select\">\r\n                            <mat-label>Tag</mat-label>\r\n                            <mat-select formControlName=\"tagId\" required>\r\n                              <mat-option *ngFor=\"let tagOption of allTags\" [value]=\"tagOption.tagId\">\r\n                                {{ tagOption.tagName }}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"keynoteTag.get('tagId')?.hasError('required')\">\r\n                              Tag selection is required\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n\r\n                          <mat-form-field appearance=\"outline\" class=\"relevance-score\">\r\n                            <mat-label>Relevance Score</mat-label>\r\n                            <input matInput formControlName=\"relevanceScore\" type=\"number\" min=\"1\" max=\"10\" />\r\n                            <mat-hint>1-10 scale</mat-hint>\r\n                          </mat-form-field>\r\n\r\n                          <button \r\n                            mat-icon-button \r\n                            color=\"warn\" \r\n                            type=\"button\" \r\n                            (click)=\"removeKeynoteTag(i, j)\"\r\n                            matTooltip=\"Remove this tag\"\r\n                            class=\"remove-tag-btn\"\r\n                          >\r\n                            <mat-icon>delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"getKeynoteTags(i).length === 0\" class=\"no-keynote-tags\">\r\n                          <mat-icon>local_offer_outlined</mat-icon>\r\n                          <span>No tags added to this keynote yet.</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"keynote-actions\">\r\n                      <button \r\n                        mat-button \r\n                        color=\"warn\" \r\n                        type=\"button\" \r\n                        (click)=\"removeKeynote(i)\"\r\n                        matTooltip=\"Remove this keynote\"\r\n                      >\r\n                        <mat-icon>delete</mat-icon>\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </mat-expansion-panel>\r\n\r\n                <div *ngIf=\"keynotes.length === 0\" class=\"no-keynotes\">\r\n                  <mat-icon>note_add</mat-icon>\r\n                  <p>No keynotes added yet. Click \"Add Keynote\" to get started.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <!-- Tags Section -->\r\n            <div class=\"section\">\r\n              <div class=\"section-header\">\r\n                <h3 class=\"section-title\">\r\n                  <mat-icon>label</mat-icon>\r\n                  Lesson Tags\r\n                </h3>\r\n                <button \r\n                  mat-raised-button \r\n                  color=\"accent\" \r\n                  type=\"button\" \r\n                  (click)=\"addTag()\"\r\n                  class=\"add-tag-btn\"\r\n                >\r\n                  <mat-icon>add</mat-icon>\r\n                  Add Tag\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"tags-container\" formArrayName=\"tags\">\r\n                <div \r\n                  *ngFor=\"let tag of tags.controls; let i = index\" \r\n                  [formGroupName]=\"i\"\r\n                  class=\"tag-item\"\r\n                >                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Tag</mat-label>\r\n                    <mat-select formControlName=\"tagId\" required>\r\n                      <mat-option *ngFor=\"let tagOption of allTags\" [value]=\"tagOption.tagId\">\r\n                        {{ tagOption.tagName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"tag.get('tagId')?.hasError('required')\">\r\n                      Tag selection is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Relevance Score</mat-label>\r\n                    <input matInput formControlName=\"relevanceScore\" type=\"number\" min=\"1\" />\r\n                    <mat-hint>Enter a score from 1-10 indicating relevance to the lesson</mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <div class=\"tag-actions\">\r\n                    <button \r\n                      mat-icon-button \r\n                      color=\"primary\" \r\n                      type=\"button\" \r\n                      (click)=\"saveTag(i)\"\r\n                      matTooltip=\"Save this tag\"\r\n                      class=\"save-tag-btn\"\r\n                    >\r\n                      <mat-icon>save</mat-icon>\r\n                    </button>\r\n                    <button \r\n                      mat-button \r\n                      color=\"warn\" \r\n                      type=\"button\" \r\n                      (click)=\"removeTag(i)\"\r\n                      matTooltip=\"Remove this tag\"\r\n                    >\r\n                      <mat-icon>delete</mat-icon>\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"tags.length === 0\" class=\"no-tags\">\r\n                  <mat-icon>label_off</mat-icon>\r\n                  <p>No tags added yet. Click \"Add Tag\" to get started.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>            <div class=\"button-container\">\r\n              <button mat-button type=\"button\" (click)=\"goBack()\">\r\n                Cancel\r\n              </button>\r\n              <button \r\n                mat-raised-button \r\n                color=\"primary\" \r\n                type=\"submit\" \r\n                [disabled]=\"lessonForm.invalid || submitting\"\r\n              >\r\n                <mat-spinner *ngIf=\"submitting\" diameter=\"20\"></mat-spinner>\r\n                {{ submitting ? (isEditMode ? 'Updating...' : 'Creating...') : (isEditMode ? 'Update' : 'Create') }} Lesson\r\n                <span *ngIf=\"keynotes.length > 0 && !submitting\"> with {{ keynotes.length }} Keynote(s)</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,  styles: [`    .container {\r\n      padding: 20px;\r\n      max-width: 1000px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 24px;\r\n      padding-bottom: 16px;\r\n      border-bottom: 1px solid #e0e0e0;\r\n    }\r\n\r\n    .header h1 {\r\n      margin: 0;\r\n      color: #1976d2;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      padding: 60px 20px;\r\n      color: #666;\r\n    }\r\n\r\n    .loading-container mat-spinner {\r\n      margin-bottom: 16px;\r\n    }\r\n    \r\n    .section {\r\n      margin-bottom: 30px;\r\n    }\r\n    \r\n    .section-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 18px;\r\n      font-weight: 500;\r\n      margin-bottom: 20px;\r\n      color: #333;\r\n    }\r\n    \r\n    .section-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    .add-keynote-btn, .add-tag-btn {\r\n      min-width: 140px;\r\n    }    .full-width {\r\n      width: 100%;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .course-warning {\r\n      color: #ff6b6b !important;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .rich-text-field {\r\n      width: 100%;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .rich-text-label {\r\n      display: block;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      margin-bottom: 8px;\r\n      font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n    }\r\n\r\n    .rich-text-container {\r\n      border: 1px solid rgba(0, 0, 0, 0.12);\r\n      border-radius: 4px;\r\n      min-height: 120px;\r\n      background-color: white;\r\n      transition: border-color 0.15s ease;\r\n    }\r\n\r\n    .rich-text-container .ql-editor {\r\n      min-height: 100px;\r\n      font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    .rich-text-container .ql-toolbar {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n      font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n    }\r\n\r\n    .rich-text-container:focus-within {\r\n      border-color: #1976d2;\r\n      box-shadow: 0 0 0 1px #1976d2;\r\n    }\r\n\r\n    .rich-text-hint {\r\n      font-size: 12px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      margin-top: 4px;\r\n      font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n    }\r\n\r\n    .rich-text-error {\r\n      font-size: 12px;\r\n      color: #f44336;\r\n      margin-top: 4px;\r\n      font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n    }\r\n\r\n    .keynote-field {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .keynote-editor {\r\n      min-height: 100px;\r\n    }\r\n\r\n    .keynote-editor .ql-editor {\r\n      min-height: 80px;\r\n    }\r\n    \r\n    .half-width {\r\n      width: 48%;\r\n      margin-bottom: 15px;\r\n    }\r\n    \r\n    .form-row {\r\n      display: flex;\r\n      gap: 16px;\r\n      align-items: center;\r\n      margin-bottom: 15px;\r\n    }\r\n    \r\n    .checkbox-field {\r\n      margin-right: 20px;\r\n    }\r\n      .keynotes-container, .tags-container {\r\n      max-height: 600px;\r\n      overflow-y: auto;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 8px;\r\n      padding: 12px;\r\n      background-color: #fafafa;\r\n    }\r\n\r\n    .tag-item {\r\n      background-color: white;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 8px;\r\n      padding: 16px;\r\n      margin-bottom: 12px;\r\n      position: relative;\r\n    }\r\n\r\n    .tag-item:last-child {\r\n      margin-bottom: 0;\r\n    }    .tag-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 12px;\r\n      padding-top: 12px;\r\n      border-top: 1px solid #f0f0f0;\r\n    }    // Keynote Tags Styles\r\n    .keynote-tags-section {\r\n      margin-top: 20px;\r\n      padding: 16px;\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n      border: 1px solid #e9ecef;\r\n    }\r\n\r\n    .section-subtitle {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      margin: 0;\r\n      color: #495057;\r\n    }\r\n\r\n    .keynote-tag-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n      background-color: white;\r\n      border: 1px solid #dee2e6;\r\n      border-radius: 6px;\r\n      padding: 12px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .tag-select {\r\n      flex: 2;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .relevance-score {\r\n      flex: 1;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .remove-tag-btn {\r\n      flex-shrink: 0;\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n\r\n    .add-keynote-tag-btn {\r\n      font-size: 12px;\r\n      height: 32px;\r\n    }\r\n\r\n    .no-keynote-tags {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      color: #6c757d;\r\n      font-style: italic;\r\n      padding: 12px;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .keynote-panel {\r\n      margin-bottom: 12px;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n    }\r\n    \r\n    .keynote-panel:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n    \r\n    .keynote-title-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      flex: 1;\r\n    }\r\n    \r\n    .keynote-icon {\r\n      color: #666;\r\n      font-size: 20px;\r\n    }\r\n    \r\n    .keynote-title {\r\n      font-weight: 500;\r\n      max-width: 200px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n    \r\n    .important-chip {\r\n      background-color: #ff6b6b;\r\n      color: white;\r\n      font-size: 11px;\r\n      height: 24px;\r\n      min-height: 24px;\r\n    }\r\n    \r\n    .content-type-chip {\r\n      font-size: 11px;\r\n      height: 24px;\r\n      min-height: 24px;\r\n      color: white;\r\n    }\r\n    \r\n    .content-type-text {\r\n      background-color: #4caf50;\r\n    }\r\n    \r\n    .content-type-bullet_points {\r\n      background-color: #ff9800;\r\n    }\r\n    \r\n    .content-type-quote {\r\n      background-color: #9c27b0;\r\n    }\r\n    \r\n    .content-type-example {\r\n      background-color: #2196f3;\r\n    }\r\n    \r\n    .keynote-preview {\r\n      color: #666;\r\n      font-size: 12px;\r\n      max-width: 150px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n      .keynote-form {\r\n      padding: 20px;\r\n      background-color: white;\r\n      border-radius: 8px;\r\n      margin: 8px 0;\r\n    }\r\n    \r\n    .keynote-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 20px;\r\n      padding-top: 16px;\r\n      border-top: 1px solid #f0f0f0;\r\n    }\r\n    \r\n    .no-keynotes, .no-tags {\r\n      text-align: center;\r\n      padding: 40px 20px;\r\n      color: #666;\r\n    }\r\n    \r\n    .no-keynotes mat-icon, .no-tags mat-icon {\r\n      font-size: 48px;\r\n      width: 48px;\r\n      height: 48px;\r\n      margin-bottom: 16px;\r\n      opacity: 0.5;\r\n    }\r\n      .button-container {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 12px;\r\n      margin-top: 30px;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #e0e0e0;\r\n    }\r\n\r\n    .button-container button {\r\n      min-width: 120px;\r\n    }\r\n\r\n    .button-container mat-spinner {\r\n      margin-right: 8px;\r\n    }\r\n\r\n    .checkbox-container {\r\n      margin: 20px 0;\r\n      padding: 16px;\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n      border: 1px solid #e9ecef;\r\n    }\r\n    \r\n    mat-checkbox {\r\n      margin-bottom: 15px;\r\n    }\r\n    \r\n    mat-divider {\r\n      margin: 30px 0;\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n      .section-header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 12px;\r\n      }\r\n      \r\n      .form-row {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n      }\r\n      \r\n      .half-width {\r\n        width: 100%;\r\n      }\r\n      \r\n      .keynote-title-container {\r\n        flex-wrap: wrap;\r\n      }\r\n      \r\n      .keynote-title {\r\n        max-width: 150px;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AddLessonComponent implements OnInit {  lessonForm: FormGroup;\r\n  filteredTopics: Observable<Topic[]> = of([]);\r\n  filteredCourses: Observable<Course[]> = of([]);\r\n  isEditMode = false;\r\n  lessonId: number | null = null;\r\n  allTags: Tag[] = []; // Available tags for selection\r\n  allCourses: Course[] = []; // Available courses for selection\r\n  loading = false;\r\n  submitting = false;\r\n\r\n  // Quill editor configuration\r\n  quillModules = {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      ['blockquote', 'code-block'],\r\n      [{ 'header': 1 }, { 'header': 2 }],\r\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n      [{ 'script': 'sub'}, { 'script': 'super' }],\r\n      [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n      [{ 'direction': 'rtl' }],\r\n      [{ 'size': ['small', false, 'large', 'huge'] }],\r\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n      [{ 'color': [] }, { 'background': [] }],\r\n      [{ 'font': [] }],\r\n      [{ 'align': [] }],\r\n      ['clean'],\r\n      ['link']\r\n    ]\r\n  };  private fb = inject(FormBuilder);\r\n  private lessonService = inject(LessonService);\r\n  private topicService = inject(TopicService);\r\n  private courseService = inject(CourseService);\r\n  private keynoteService = inject(LessonKeynoteService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private snackBar = inject(MatSnackBar);\r\n  private lessonTagService = inject(LessonTagService);\r\n  private keynoteTagService = inject(KeynoteTagService);\r\n  private tagService = inject(TagService);\r\n  constructor() {\r\n    this.lessonForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      description: [''],\r\n      courseId: [''],\r\n      courseSearch: [''],\r\n      topicId: ['', Validators.required],\r\n      topicSearch: [''],\r\n      contentType: ['', Validators.required],\r\n      contentUrl: [''],\r\n      durationMinutes: [''],\r\n      orderNumber: [1],\r\n      isFree: [false],\r\n      tags: this.fb.array([]),\r\n      keynotes: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  get tags(): FormArray {\r\n    return this.lessonForm.get('tags') as FormArray;\r\n  }\r\n\r\n  get keynotes(): FormArray {\r\n    return this.lessonForm.get('keynotes') as FormArray;\r\n  }  ngOnInit() {\r\n    this.setupCourseAutocomplete();\r\n    this.setupTopicAutocomplete();\r\n    this.checkEditMode();\r\n    this.loadAllTags();\r\n    this.loadAllCourses();\r\n    this.handleNavigationState();\r\n  }\r\n\r\n  handleNavigationState() {\r\n    // Check if we have navigation state with selected topic\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation?.extras?.state || window.history.state;\r\n    \r\n    if (state && state.selectedTopic && !this.isEditMode) {\r\n      // Pre-populate course and topic from navigation state\r\n      const selectedTopic = state.selectedTopic;\r\n      \r\n      // Load the course for this topic\r\n      this.courseService.getCourseById(selectedTopic.courseId).subscribe({\r\n        next: (course) => {\r\n          this.lessonForm.patchValue({\r\n            courseId: selectedTopic.courseId,\r\n            courseSearch: course,\r\n            topicId: selectedTopic.topicId,\r\n            topicSearch: selectedTopic\r\n          });\r\n        },\r\n        error: () => {\r\n          console.error('Error loading course for selected topic');\r\n        }\r\n      });\r\n    }\r\n  }\r\n  setupCourseAutocomplete() {\r\n    this.filteredCourses = this.lessonForm.get('courseSearch')!.valueChanges.pipe(\r\n      startWith(''),\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap(value => this._filterCourses(value))\r\n    );\r\n  }\r\n\r\n  setupTopicAutocomplete() {\r\n    this.filteredTopics = this.lessonForm.get('topicSearch')!.valueChanges.pipe(\r\n      startWith(''),\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap(value => this._filterTopics(value))\r\n    );\r\n  }\r\n\r\n  private _filterCourses(value: string | Course): Observable<Course[]> {\r\n    if (typeof value !== 'string') {\r\n      return of([]);\r\n    }\r\n    if (!value || value.trim() === '') {\r\n      return this.courseService.getAllCourses();\r\n    }\r\n    // Filter courses by title\r\n    const filterValue = value.toLowerCase();\r\n    return this.courseService.getAllCourses().pipe(\r\n      switchMap(courses => of(courses.filter(course => \r\n        course.title.toLowerCase().includes(filterValue)\r\n      )))\r\n    );\r\n  }\r\n\r\n  private _filterTopics(value: string | Topic): Observable<Topic[]> {\r\n    if (typeof value !== 'string') {\r\n      return of([]);\r\n    }\r\n    \r\n    const selectedCourseId = this.lessonForm.get('courseId')?.value;\r\n    if (!selectedCourseId) {\r\n      return of([]); // No topics if no course is selected\r\n    }\r\n    \r\n    // Get topics for the selected course\r\n    return this.topicService.getTopicsByCourseId(selectedCourseId).pipe(\r\n      switchMap(topics => {\r\n        if (!value || value.trim() === '') {\r\n          return of(topics);\r\n        }\r\n        // Filter topics by title\r\n        const filterValue = value.toLowerCase();\r\n        return of(topics.filter(topic => \r\n          topic.title.toLowerCase().includes(filterValue)\r\n        ));\r\n      })\r\n    );\r\n  }\r\n\r\n  displayCourseFn = (course: Course): string => {\r\n    return course ? `${course.title} (ID: ${course.courseId})` : '';\r\n  }\r\n\r\n  displayTopicFn = (topic: Topic): string => {\r\n    return topic ? `${topic.title} (ID: ${topic.topicId})` : '';\r\n  }\r\n\r\n  onCourseSelected(event: any) {\r\n    const course = event.option.value as Course;\r\n    this.lessonForm.patchValue({\r\n      courseId: course.courseId,\r\n      topicId: '', // Clear topic selection when course changes\r\n      topicSearch: '' // Clear topic search when course changes\r\n    });\r\n    \r\n    // Trigger topic search refresh\r\n    this.lessonForm.get('topicSearch')?.updateValueAndValidity();\r\n  }\r\n\r\n  onTopicSelected(event: any) {\r\n    const topic = event.option.value as Topic;\r\n    this.lessonForm.patchValue({\r\n      topicId: topic.topicId\r\n    });\r\n  }\r\n\r\n  loadAllCourses() {\r\n    this.courseService.getAllCourses().subscribe({\r\n      next: (courses) => {\r\n        this.allCourses = courses;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading courses:', error);\r\n        this.snackBar.open('Error loading courses', 'Close', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n  addKeynote() {\r\n    const keynoteForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      content: ['', Validators.required],\r\n      contentType: ['text', Validators.required],\r\n      isImportant: [false],\r\n      hasVisualAid: [false],\r\n      visualAidUrl: [''],\r\n      relatedPlanet: [''],\r\n      relatedZodiac: [''],\r\n      keynoteTags: this.fb.array([]), // Add keynote tags form array\r\n      isNew: [true] // Flag to expand new keynotes\r\n    });\r\n    \r\n    this.keynotes.push(keynoteForm);\r\n  }\r\n\r\n  removeKeynote(index: number) {\r\n    this.keynotes.removeAt(index);\r\n  }\r\n\r\n  addTag() {\r\n    const tagForm = this.fb.group({\r\n      lessonTagId: [null],\r\n      tagId: [null, Validators.required],\r\n      tagName: [''],\r\n      relevanceScore: [1]\r\n    });\r\n    this.tags.push(tagForm);\r\n  }\r\n  async removeTag(index: number) {\r\n    const tagForm = this.tags.at(index);\r\n    const tagData = tagForm.value;\r\n    if (tagData.lessonTagId) {\r\n      // Delete from backend, then reload tags\r\n      try {\r\n        await this.lessonTagService.deleteLessonTag(tagData.lessonTagId).toPromise();\r\n        this.snackBar.open('Tag deleted successfully.', 'Close', { duration: 2000 });\r\n        this.loadTags();\r\n      } catch (error: any) {\r\n        let errorMsg = 'Failed to delete tag. Please try again.';\r\n        if (error && error.error && error.error.message) {\r\n          errorMsg = error.error.message;\r\n        } else if (error && error.message) {\r\n          errorMsg = error.message;\r\n        }\r\n        this.snackBar.open(errorMsg, 'Close', { duration: 5000 });\r\n        console.error('Error deleting tag:', error);\r\n      }\r\n    } else {\r\n      // Just remove locally if not saved yet\r\n      this.tags.removeAt(index);\r\n    }\r\n  }\r\n\r\n  // Keynote Tag methods\r\n  getKeynoteTags(keynoteIndex: number): FormArray {\r\n    const keynote = this.keynotes.at(keynoteIndex) as FormGroup;\r\n    return keynote.get('keynoteTags') as FormArray;\r\n  }\r\n\r\n  addKeynoteTag(keynoteIndex: number) {\r\n    const keynoteTagForm = this.fb.group({\r\n      keynoteTagId: [null],\r\n      tagId: [null, Validators.required],\r\n      relevanceScore: [5]\r\n    });\r\n    this.getKeynoteTags(keynoteIndex).push(keynoteTagForm);\r\n  }\r\n\r\n  removeKeynoteTag(keynoteIndex: number, tagIndex: number) {\r\n    this.getKeynoteTags(keynoteIndex).removeAt(tagIndex);\r\n  }\r\n\r\n  getContentTypeLabel(contentType: string): string {\r\n    switch (contentType) {\r\n      case 'text': return 'Text';\r\n      case 'bullet_points': return 'Bullet Points';\r\n      case 'quote': return 'Quote';\r\n      case 'example': return 'Example';\r\n      default: return contentType || 'Text';\r\n    }\r\n  }\r\n  getKeynotePreview(content: string): string {\r\n    if (!content) return 'No content';\r\n    // Strip HTML tags for clean preview display\r\n    const cleanContent = content.replace(/<[^>]*>/g, '');\r\n    return cleanContent.length > 50 ? cleanContent.substring(0, 50) + '...' : cleanContent;\r\n  }\r\n\r\n  getContentPlaceholder(contentType: string): string {\r\n    switch (contentType) {\r\n      case 'bullet_points':\r\n        return 'Enter bullet points, one per line:\\n• Point 1\\n• Point 2\\n• Point 3';\r\n      case 'quote':\r\n        return 'Enter the quote text...';\r\n      case 'example':\r\n        return 'Provide a detailed example...';\r\n      default:\r\n        return 'Enter the keynote content...';\r\n    }\r\n  }\r\n\r\n  getContentHint(contentType: string): string {\r\n    switch (contentType) {\r\n      case 'bullet_points':\r\n        return 'Use bullet points (•), dashes (-), or asterisks (*) to separate points';\r\n      case 'quote':\r\n        return 'Inspirational or educational quotes related to the lesson';\r\n      case 'example':\r\n        return 'Practical examples that illustrate the lesson concepts';\r\n      default:\r\n        return 'General text content for the keynote';\r\n    }\r\n  }\r\n  checkEditMode() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      const numericId = parseInt(id, 10);\r\n      if (!isNaN(numericId) && numericId > 0) {\r\n        this.isEditMode = true;\r\n        this.lessonId = numericId;\r\n        console.log('Edit mode enabled for lessonId:', this.lessonId);\r\n        this.loadLesson();\r\n      } else {\r\n        console.error('Invalid lesson ID in route:', id);\r\n        this.snackBar.open('Invalid lesson ID provided', 'Close', { duration: 3000 });\r\n        this.router.navigate(['/lessons']);\r\n      }\r\n    }\r\n  }loadLesson() {\r\n    if (this.lessonId) {\r\n      this.loading = true;\r\n      this.lessonService.getLessonById(this.lessonId).subscribe({\r\n        next: (lesson) => {\r\n          this.lessonForm.patchValue({\r\n            title: lesson.title,\r\n            description: lesson.description,\r\n            topicId: lesson.topicId,\r\n            contentType: lesson.contentType,\r\n            contentUrl: lesson.contentUrl,\r\n            durationMinutes: lesson.durationMinutes,\r\n            orderNumber: lesson.orderNumber,\r\n            isFree: lesson.isFree\r\n          });\r\n          \r\n          // Load topic details for the search field\r\n          this.topicService.getTopicById(lesson.topicId).subscribe({\r\n            next: (topic) => {\r\n              this.lessonForm.patchValue({\r\n                topicSearch: topic,\r\n                courseId: topic.courseId\r\n              });\r\n              \r\n              // Load course details for the course search field\r\n              this.courseService.getCourseById(topic.courseId).subscribe({\r\n                next: (course) => {\r\n                  this.lessonForm.patchValue({\r\n                    courseSearch: course\r\n                  });\r\n                },\r\n                error: () => {\r\n                  console.error('Error loading course details');\r\n                }\r\n              });\r\n            }\r\n          });\r\n\r\n          // Load existing keynotes\r\n          this.loadKeynotes();\r\n          // Load existing tags\r\n          this.loadTags(); // Load tags for lesson\r\n          this.loading = false;\r\n        },\r\n        error: () => {\r\n          this.snackBar.open('Error loading lesson', 'Close', {\r\n            duration: 3000\r\n          });\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  loadKeynotes() {\r\n    if (this.lessonId) {\r\n      this.keynoteService.getKeynotesByLessonId(this.lessonId).subscribe({\r\n        next: (keynotes: LessonKeynote[]) => {\r\n          // Clear existing keynotes\r\n          while (this.keynotes.length !== 0) {\r\n            this.keynotes.removeAt(0);\r\n          }\r\n\r\n          // Add existing keynotes to the form\r\n          keynotes.forEach((keynote: LessonKeynote) => {            const keynoteForm = this.fb.group({\r\n              keynoteId: [keynote.keynoteId],\r\n              title: [keynote.title, Validators.required],\r\n              content: [keynote.content, Validators.required],\r\n              contentType: [keynote.contentType, Validators.required],\r\n              isImportant: [keynote.isImportant || false],\r\n              hasVisualAid: [keynote.hasVisualAid || false],\r\n              visualAidUrl: [keynote.visualAidUrl || ''],\r\n              relatedPlanet: [keynote.relatedPlanet || ''],\r\n              relatedZodiac: [keynote.relatedZodiac || ''],\r\n              keynoteTags: this.fb.array([]), // Add keynote tags form array\r\n              isNew: [false] // Existing keynotes are not expanded by default\r\n            });            this.keynotes.push(keynoteForm);\r\n\r\n            // Load keynote tags for this keynote\r\n            if (keynote.keynoteId) {\r\n              this.loadKeynoteTags(keynote.keynoteId, this.keynotes.length - 1);\r\n            }\r\n          });\r\n        },\r\n        error: () => {\r\n          this.snackBar.open('Error loading keynotes', 'Close', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }  loadTags() {\r\n    if (this.lessonId && typeof this.lessonId === 'number' && this.lessonId > 0) {\r\n      console.log('Loading tags for lessonId:', this.lessonId);\r\n      this.lessonTagService.getTagsByLessonId(this.lessonId).subscribe({\r\n        next: (tags: LessonTag[]) => {\r\n          console.log('Tags loaded successfully:', tags);\r\n          // Clear existing tags\r\n          while (this.tags.length !== 0) {\r\n            this.tags.removeAt(0);\r\n          }\r\n          // Add loaded tags to form array\r\n          tags.forEach((tag: LessonTag) => {\r\n            const tagForm = this.fb.group({\r\n              lessonTagId: [tag.lessonTagId],\r\n              tagId: [tag.tagId, Validators.required],\r\n              tagName: [tag.tagName || ''],\r\n              relevanceScore: [tag.relevanceScore || 1]\r\n            });\r\n            this.tags.push(tagForm);\r\n          });\r\n          console.log('Tags form array updated, length:', this.tags.length);\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading tags:', error);\r\n          let errorMessage = 'Error loading tags';\r\n          if (error.status) {\r\n            errorMessage += ` (${error.status})`;\r\n          }\r\n          if (error.error && error.error.message) {\r\n            errorMessage += `: ${error.error.message}`;\r\n          }\r\n          this.snackBar.open(errorMessage, 'Close', { duration: 5000 });\r\n        }\r\n      });\r\n    } else {\r\n      console.log('lessonId is not valid for loadTags:', this.lessonId, typeof this.lessonId);\r\n    }\r\n  }\r\n  loadAllTags() {\r\n    this.tagService.getTags().subscribe({\r\n      next: (tags: Tag[]) => {\r\n        this.allTags = tags;\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Error loading tags', 'Close', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadKeynoteTags(keynoteId: number, keynoteIndex: number) {\r\n    this.keynoteTagService.getTagsByKeynoteId(keynoteId).subscribe({\r\n      next: (keynoteTags: KeynoteTag[]) => {\r\n        const keynoteTagsArray = this.getKeynoteTags(keynoteIndex);\r\n        // Clear existing keynote tags\r\n        while (keynoteTagsArray.length !== 0) {\r\n          keynoteTagsArray.removeAt(0);\r\n        }\r\n        // Add existing keynote tags to the form\r\n        keynoteTags.forEach((keynoteTag: KeynoteTag) => {\r\n          const keynoteTagForm = this.fb.group({\r\n            keynoteTagId: [keynoteTag.keynoteTagId],\r\n            tagId: [keynoteTag.tagId, Validators.required],\r\n            relevanceScore: [keynoteTag.relevanceScore || 5]\r\n          });\r\n          keynoteTagsArray.push(keynoteTagForm);\r\n        });\r\n      },\r\n      error: () => {\r\n        this.snackBar.open('Error loading keynote tags', 'Close', { duration: 3000 });\r\n      }\r\n    });\r\n  }onSubmit() {\r\n    if (this.lessonForm.valid) {\r\n      this.submitting = true;\r\n      const formData = this.lessonForm.value;\r\n      const lessonData = {\r\n        title: formData.title,\r\n        description: formData.description,\r\n        topicId: formData.topicId,\r\n        contentType: formData.contentType,\r\n        contentUrl: formData.contentUrl,\r\n        durationMinutes: formData.durationMinutes,\r\n        isFree: formData.isFree,\r\n        ...(this.isEditMode && { orderNumber: formData.orderNumber })\r\n      };\r\n\r\n      if (this.isEditMode && this.lessonId) {\r\n        // Update existing lesson\r\n        this.lessonService.updateLesson(this.lessonId, lessonData).subscribe({\r\n          next: async () => {\r\n            try {\r\n              // Handle keynotes and tags after lesson update\r\n              await this.handleKeynotes(this.lessonId!);\r\n              await this.handleTags(this.lessonId!);\r\n              \r\n              this.snackBar.open(\r\n                `Lesson updated successfully with ${this.keynotes.length} keynote(s) and ${this.tags.length} tag(s)!`,\r\n                'Close',\r\n                { duration: 3000 }\r\n              );\r\n              this.submitting = false;\r\n              this.goBack();\r\n            } catch (error) {\r\n              console.error('Error updating keynotes/tags:', error);\r\n              this.snackBar.open(\r\n                'Lesson updated but some keynotes or tags failed to save',\r\n                'Close',\r\n                { duration: 5000 }\r\n              );\r\n              this.submitting = false;\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Error updating lesson:', error);\r\n            this.snackBar.open('Error updating lesson. Please try again.', 'Close', {\r\n              duration: 5000\r\n            });\r\n            this.submitting = false;\r\n          }\r\n        });\r\n      } else {\r\n        // Create new lesson\r\n        this.lessonService.createLesson(lessonData).subscribe({\r\n          next: async (lesson) => {\r\n            try {\r\n              // Handle keynotes and tags after lesson creation\r\n              await this.handleKeynotes(lesson.lessonId);\r\n              await this.handleTags(lesson.lessonId);\r\n              \r\n              this.snackBar.open(\r\n                `Lesson created successfully with ${this.keynotes.length} keynote(s) and ${this.tags.length} tag(s)!`,\r\n                'Close',\r\n                { duration: 3000 }\r\n              );\r\n              this.submitting = false;\r\n              this.goBack();\r\n            } catch (error) {\r\n              console.error('Error creating keynotes/tags:', error);\r\n              this.snackBar.open(\r\n                'Lesson created but some keynotes or tags failed to save',\r\n                'Close',\r\n                { duration: 5000 }\r\n              );\r\n              this.submitting = false;\r\n              this.goBack();\r\n            }\r\n          },\r\n          error: (error) => {\r\n            console.error('Error creating lesson:', error);\r\n            this.snackBar.open('Error creating lesson. Please try again.', 'Close', {\r\n              duration: 5000\r\n            });\r\n            this.submitting = false;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.snackBar.open('Please fill in all required fields correctly.', 'Close', {\r\n        duration: 3000\r\n      });\r\n    }\r\n  }  private async handleKeynotes(lessonId: number): Promise<void> {\r\n    const keynotePromises: Promise<any>[] = [];\r\n    const formKeynotes = this.lessonForm.get('keynotes')?.value || [];\r\n\r\n    for (let index = 0; index < formKeynotes.length; index++) {\r\n      const keynoteData = formKeynotes[index];\r\n      const keynotePayload = {\r\n        lessonId: lessonId,\r\n        title: keynoteData.title,\r\n        content: keynoteData.content,\r\n        contentType: keynoteData.contentType,\r\n        isImportant: keynoteData.isImportant || false,\r\n        hasVisualAid: keynoteData.hasVisualAid || false,\r\n        visualAidUrl: keynoteData.visualAidUrl || null,\r\n        relatedPlanet: keynoteData.relatedPlanet || null,\r\n        relatedZodiac: keynoteData.relatedZodiac || null\r\n      };\r\n\r\n      try {\r\n        let savedKeynote;\r\n        if (keynoteData.keynoteId) {\r\n          // Update existing keynote\r\n          savedKeynote = await this.keynoteService.updateKeynote(keynoteData.keynoteId, keynotePayload).toPromise();\r\n        } else {\r\n          // Create new keynote\r\n          savedKeynote = await this.keynoteService.createKeynote(keynotePayload).toPromise();\r\n        }        // Handle keynote tags after keynote is saved\r\n        if (savedKeynote && savedKeynote.keynoteId && keynoteData.keynoteTags) {\r\n          await this.handleKeynoteTags(savedKeynote.keynoteId, keynoteData.keynoteTags);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error handling keynote:', error);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async handleKeynoteTags(keynoteId: number, keynoteTags: any[]): Promise<void> {\r\n    if (this.isEditMode) {\r\n      try {\r\n        // Get existing keynote tags\r\n        const existingKeynoteTags = await this.keynoteTagService.getTagsByKeynoteId(keynoteId).toPromise();\r\n        const currentKeynoteTags = existingKeynoteTags || [];\r\n        \r\n        // Find keynote tags to delete\r\n        const formKeynoteTagIds = keynoteTags.map((kt: any) => kt.keynoteTagId).filter((id: any) => id);\r\n        const keynoteTagsToDelete = currentKeynoteTags.filter(kt => \r\n          kt.keynoteTagId && !formKeynoteTagIds.includes(kt.keynoteTagId)\r\n        );\r\n        \r\n        // Delete removed keynote tags\r\n        const deletePromises = keynoteTagsToDelete\r\n          .filter(kt => kt.keynoteTagId)\r\n          .map(kt => this.keynoteTagService.deleteKeynoteTag(kt.keynoteTagId!).toPromise());\r\n        \r\n        if (deletePromises.length > 0) {\r\n          await Promise.all(deletePromises);\r\n        }\r\n        \r\n        // Handle updates and additions\r\n        const keynoteTagPromises: Promise<any>[] = [];\r\n        keynoteTags.forEach((keynoteTagData: any) => {\r\n          const keynoteTagPayload = {\r\n            keynoteId: keynoteId,\r\n            tagId: keynoteTagData.tagId,\r\n            relevanceScore: keynoteTagData.relevanceScore || 5\r\n          };\r\n          \r\n          if (keynoteTagData.keynoteTagId) {\r\n            // Update existing keynote tag\r\n            keynoteTagPromises.push(\r\n              this.keynoteTagService.updateKeynoteTag(keynoteTagData.keynoteTagId, keynoteTagPayload).toPromise()\r\n            );\r\n          } else {\r\n            // Add new keynote tag\r\n            keynoteTagPromises.push(\r\n              this.keynoteTagService.createKeynoteTag(keynoteTagPayload).toPromise()\r\n            );\r\n          }\r\n        });\r\n        \r\n        if (keynoteTagPromises.length > 0) {\r\n          await Promise.all(keynoteTagPromises);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error handling keynote tags:', error);\r\n        throw error;\r\n      }\r\n    } else {\r\n      // For create mode, just add all keynote tags\r\n      const keynoteTagPromises: Promise<any>[] = [];\r\n      keynoteTags.forEach((keynoteTagData: any) => {\r\n        const keynoteTagPayload = {\r\n          keynoteId: keynoteId,\r\n          tagId: keynoteTagData.tagId,\r\n          relevanceScore: keynoteTagData.relevanceScore || 5\r\n        };\r\n        keynoteTagPromises.push(\r\n          this.keynoteTagService.createKeynoteTag(keynoteTagPayload).toPromise()\r\n        );\r\n      });\r\n      \r\n      if (keynoteTagPromises.length > 0) {\r\n        await Promise.all(keynoteTagPromises);\r\n      }\r\n    }\r\n  }private async handleTags(lessonId: number): Promise<void> {\r\n    const formTags = this.lessonForm.get('tags')?.value || [];\r\n    \r\n    if (this.isEditMode) {\r\n      // For edit mode, we need to handle deletions, updates, and additions\r\n      try {\r\n        // First, get existing tags for this lesson\r\n        const existingTags = await this.lessonTagService.getTagsByLessonId(lessonId).toPromise();\r\n        \r\n        // Handle case where existingTags might be undefined\r\n        const currentTags = existingTags || [];\r\n        \r\n        // Find tags to delete (existing tags not in the form)\r\n        const formTagIds = formTags.map((tag: any) => tag.lessonTagId).filter((id: any) => id);\r\n        const tagsToDelete = currentTags.filter(tag => \r\n          tag.lessonTagId && !formTagIds.includes(tag.lessonTagId)\r\n        );\r\n        \r\n        // Delete removed tags\r\n        const deletePromises = tagsToDelete\r\n          .filter(tag => tag.lessonTagId) // Ensure lessonTagId exists\r\n          .map(tag => \r\n            this.lessonTagService.deleteLessonTag(tag.lessonTagId!).toPromise()\r\n          );\r\n        if (deletePromises.length > 0) {\r\n          await Promise.all(deletePromises);\r\n        }\r\n        \r\n        // Handle updates and additions\r\n        const tagPromises: Promise<any>[] = [];\r\n        formTags.forEach((tagData: any) => {\r\n          const tagPayload = {\r\n            lessonId: lessonId,\r\n            tagId: tagData.tagId,\r\n            relevanceScore: tagData.relevanceScore || 1\r\n          };\r\n          \r\n          if (tagData.lessonTagId) {\r\n            // Update existing tag\r\n            tagPromises.push(\r\n              this.lessonTagService.updateLessonTag(tagData.lessonTagId, tagPayload).toPromise()\r\n            );\r\n          } else {\r\n            // Add new tag\r\n            tagPromises.push(\r\n              this.lessonTagService.addLessonTag(tagPayload).toPromise()\r\n            );\r\n          }\r\n        });\r\n        \r\n        if (tagPromises.length > 0) {\r\n          await Promise.all(tagPromises);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error handling tags:', error);\r\n        throw error;\r\n      }\r\n    } else {\r\n      // For create mode, just add all tags\r\n      const tagPromises: Promise<any>[] = [];\r\n      formTags.forEach((tagData: any) => {\r\n        const tagPayload = {\r\n          lessonId: lessonId,\r\n          tagId: tagData.tagId,\r\n          relevanceScore: tagData.relevanceScore || 1\r\n        };\r\n        tagPromises.push(\r\n          this.lessonTagService.addLessonTag(tagPayload).toPromise()\r\n        );\r\n      });\r\n      \r\n      if (tagPromises.length > 0) {\r\n        await Promise.all(tagPromises);\r\n      }\r\n    }\r\n  }\r\n  goBack() {\r\n    // Get current topic selection to pass back to lesson list\r\n    const currentTopicId = this.lessonForm.get('topicId')?.value;\r\n    const currentTopic = this.lessonForm.get('topicSearch')?.value;\r\n    \r\n    if (currentTopicId && currentTopic) {\r\n      // Navigate back with current topic to maintain selection\r\n      this.router.navigate(['/lessons'], {\r\n        state: { selectedTopic: currentTopic }\r\n      });\r\n    } else {\r\n      // Navigate back without state if no topic selected\r\n      this.router.navigate(['/lessons']);\r\n    }\r\n  }\r\n\r\n  async saveTag(i: number) {\r\n    const tagForm = this.tags.at(i);\r\n    if (!tagForm.valid) {\r\n      this.snackBar.open('Please select a tag and enter a valid relevance score.', 'Close', { duration: 3000 });\r\n      return;\r\n    }\r\n    if (!this.lessonId || typeof this.lessonId !== 'number') {\r\n      this.snackBar.open('Lesson ID is missing. Cannot save tag.', 'Close', { duration: 3000 });\r\n      return;\r\n    }\r\n    const tagData = tagForm.value;\r\n    const tagPayload = {\r\n      lessonId: this.lessonId as number,\r\n      tagId: Number(tagData.tagId),\r\n      relevanceScore: Number(tagData.relevanceScore)\r\n    };\r\n    try {\r\n      if (tagData.lessonTagId) {\r\n        await this.lessonTagService.updateLessonTag(tagData.lessonTagId, { ...tagPayload, lessonTagId: tagData.lessonTagId }).toPromise();\r\n        this.snackBar.open('Tag updated successfully.', 'Close', { duration: 2000 });\r\n      } else {\r\n        const created = await this.lessonTagService.addLessonTag(tagPayload).toPromise();\r\n        if (created && created.lessonTagId) {\r\n          tagForm.patchValue({ lessonTagId: created.lessonTagId });\r\n        }\r\n        this.snackBar.open('Tag added successfully.', 'Close', { duration: 2000 });\r\n      }\r\n      this.loadTags(); // Always reload tags after add/update\r\n    } catch (error: any) {\r\n      let errorMsg = 'Failed to save tag. Please try again.';\r\n      if (error && error.error && error.error.message) {\r\n        errorMsg = error.error.message;\r\n      } else if (error && error.message) {\r\n        errorMsg = error.message;\r\n      }\r\n      this.snackBar.open(errorMsg, 'Close', { duration: 5000 });\r\n      console.error('Error saving tag:', error);\r\n    }\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LessonListComponent } from './lesson-list/lesson-list.component';\r\nimport { AddLessonComponent } from './add-lesson/add-lesson.component';\r\n\r\nexport const LESSONS_ROUTES: Routes = [\r\n  { path: '', component: LessonListComponent },\r\n  { path: 'add', component: AddLessonComponent },\r\n  { path: 'update/:id', component: AddLessonComponent }\r\n];\r\n"],"mappings":"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","names":["state"],"x_google_ignoreList":[1,2]}
{
  "version": 3,
  "sources": ["src/app/services/lesson.service.ts", "src/app/services/lesson-keynote.service.ts", "src/app/services/keynote-tag.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface Lesson {\r\n  lessonId: number;\r\n  topicId: number;\r\n  title: string;\r\n  description: string;\r\n  contentType: 'video' | 'article' | 'quiz' | 'exercise';\r\n  contentUrl: string;\r\n  durationMinutes: number;\r\n  orderNumber: number;\r\n  isFree: boolean;\r\n  statusFlag?: boolean;\r\n  createdAt: Date | null;\r\n  updatedAt: Date | null;\r\n  topicTitle?: string; // Optional for joined queries\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LessonService {\r\n  private apiUrl = `${environment.apiUrl}/lessons`;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllLessons(): Observable<Lesson[]> {\r\n    return this.http.get<Lesson[]>(this.apiUrl);\r\n  }\r\n\r\n  getLessonsByTopicId(topicId: number): Observable<Lesson[]> {\r\n    return this.http.get<Lesson[]>(`${this.apiUrl}/topic/${topicId}`);\r\n  }\r\n\r\n  getLessonById(id: number): Observable<Lesson> {\r\n    return this.http.get<Lesson>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createLesson(lesson: Partial<Lesson>): Observable<Lesson> {\r\n    return this.http.post<Lesson>(this.apiUrl, lesson);\r\n  }\r\n\r\n  updateLesson(id: number, lesson: Partial<Lesson>): Observable<Lesson> {\r\n    return this.http.put<Lesson>(`${this.apiUrl}/${id}`, lesson);\r\n  }\r\n\r\n  deleteLesson(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface LessonKeynote {\r\n  keynoteId?: number;\r\n  lessonId: number;\r\n  title: string;\r\n  content: string;\r\n  contentType: 'text' | 'bullet_points' | 'quote' | 'example';\r\n  orderSequence?: number;\r\n  isImportant?: boolean;\r\n  hasVisualAid?: boolean;\r\n  visualAidUrl?: string;\r\n  relatedPlanet?: string;\r\n  relatedZodiac?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  lessonTitle?: string;\r\n  topicTitle?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LessonKeynoteService {\r\n  private apiUrl = `${environment.apiUrl}/lesson-keynotes`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Basic CRUD operations\r\n  getAllKeynotes(): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(this.apiUrl);\r\n  }\r\n\r\n  getKeynoteById(id: number): Observable<LessonKeynote> {\r\n    return this.http.get<LessonKeynote>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createKeynote(keynote: LessonKeynote): Observable<LessonKeynote> {\r\n    return this.http.post<LessonKeynote>(this.apiUrl, keynote);\r\n  }\r\n\r\n  updateKeynote(id: number, keynote: LessonKeynote): Observable<LessonKeynote> {\r\n    return this.http.put<LessonKeynote>(`${this.apiUrl}/${id}`, keynote);\r\n  }\r\n\r\n  deleteKeynote(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Specialized operations\r\n  getKeynotesByLessonId(lessonId: number): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/lesson/${lessonId}`);\r\n  }\r\n\r\n  getImportantKeynotesByLessonId(lessonId: number): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/lesson/${lessonId}/important`);\r\n  }\r\n\r\n  getKeynotesByContentType(lessonId: number, contentType: string): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/lesson/${lessonId}/content-type/${contentType}`);\r\n  }\r\n\r\n  getKeynotesWithVisualAids(lessonId: number): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/lesson/${lessonId}/visual-aids`);\r\n  }\r\n\r\n  getKeynotesByPlanet(planet: string): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/planet/${planet}`);\r\n  }\r\n\r\n  getKeynotesByZodiac(zodiac: string): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/zodiac/${zodiac}`);\r\n  }\r\n\r\n  searchKeynotes(query: string): Observable<LessonKeynote[]> {\r\n    return this.http.get<LessonKeynote[]>(`${this.apiUrl}/search?query=${encodeURIComponent(query)}`);\r\n  }\r\n\r\n  reorderKeynotes(lessonId: number, keynoteIds: number[]): Observable<LessonKeynote[]> {\r\n    return this.http.put<LessonKeynote[]>(`${this.apiUrl}/lesson/${lessonId}/reorder`, keynoteIds);\r\n  }\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface KeynoteTag {\r\n  keynoteTagId?: number;\r\n  keynoteId: number;\r\n  tagId: number;\r\n  relevanceScore?: number;\r\n  createdAt?: Date;\r\n  // Optional enriched fields\r\n  keynoteTitle?: string;\r\n  tagName?: string;\r\n  tagCategory?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeynoteTagService {\r\n  private apiUrl = `${environment.apiUrl}/keynote-tags`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Get all keynote tags\r\n  getAllKeynoteTags(): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(this.apiUrl);\r\n  }\r\n\r\n  // Get keynote tag by ID\r\n  getKeynoteTagById(keynoteTagId: number): Observable<KeynoteTag> {\r\n    return this.http.get<KeynoteTag>(`${this.apiUrl}/${keynoteTagId}`);\r\n  }\r\n\r\n  // Get tags by keynote ID\r\n  getTagsByKeynoteId(keynoteId: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/keynote/${keynoteId}`);\r\n  }\r\n\r\n  // Get keynotes by tag ID\r\n  getKeynotesByTagId(tagId: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/tag/${tagId}`);\r\n  }\r\n\r\n  // Get keynote tags by lesson ID\r\n  getKeynoteTagsByLessonId(lessonId: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/lesson/${lessonId}`);\r\n  }\r\n\r\n  // Get tags by keynote ID with minimum relevance score\r\n  getTagsByKeynoteIdWithMinRelevance(keynoteId: number, minScore: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/keynote/${keynoteId}/relevance/${minScore}`);\r\n  }\r\n\r\n  // Get keynotes by tag ID with minimum relevance score\r\n  getKeynotesByTagIdWithMinRelevance(tagId: number, minScore: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/tag/${tagId}/relevance/${minScore}`);\r\n  }\r\n\r\n  // Get top tags by relevance for a keynote\r\n  getTopTagsByKeynoteId(keynoteId: number): Observable<KeynoteTag[]> {\r\n    return this.http.get<KeynoteTag[]>(`${this.apiUrl}/keynote/${keynoteId}/top-tags`);\r\n  }\r\n\r\n  // Create keynote tag association\r\n  createKeynoteTag(keynoteTag: KeynoteTag): Observable<KeynoteTag> {\r\n    return this.http.post<KeynoteTag>(this.apiUrl, keynoteTag);\r\n  }\r\n\r\n  // Update keynote tag\r\n  updateKeynoteTag(keynoteTagId: number, keynoteTag: Partial<KeynoteTag>): Observable<KeynoteTag> {\r\n    return this.http.put<KeynoteTag>(`${this.apiUrl}/${keynoteTagId}`, keynoteTag);\r\n  }\r\n\r\n  // Delete keynote tag by ID\r\n  deleteKeynoteTag(keynoteTagId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${keynoteTagId}`);\r\n  }\r\n\r\n  // Delete keynote tag by keynote and tag IDs\r\n  deleteKeynoteTagByKeynoteAndTag(keynoteId: number, tagId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/keynote/${keynoteId}/tag/${tagId}`);\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}

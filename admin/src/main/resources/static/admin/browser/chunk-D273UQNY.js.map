{
  "version": 3,
  "sources": ["src/app/services/tag.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface Tag {\r\n  tagId?: number;\r\n  tagName: string;\r\n  tagCategory?: string;\r\n  description?: string;\r\n  createdByUserId?: number;\r\n  statusFlag?: boolean;\r\n  createdAt?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TagService {\r\n  private apiUrl = `${environment.apiUrl}/tags`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTags(): Observable<Tag[]> {\r\n    return this.http.get<Tag[]>(this.apiUrl);\r\n  }\r\n\r\n  getTagById(tagId: number): Observable<Tag> {\r\n    return this.http.get<Tag>(`${this.apiUrl}/${tagId}`);\r\n  }\r\n\r\n  createTag(tag: Tag): Observable<Tag> {\r\n    return this.http.post<Tag>(this.apiUrl, tag);\r\n  }\r\n\r\n  updateTag(tagId: number, tag: Tag): Observable<Tag> {\r\n    return this.http.put<Tag>(`${this.apiUrl}/${tagId}`, tag);\r\n  }\r\n\r\n  deleteTag(tagId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${tagId}`);\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;AAgBM,IAAO,aAAP,MAAO,YAAU;EAGD;EAFZ,SAAS,GAAG,YAAY,MAAM;EAEtC,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAmB;EAEvC,UAAO;AACL,WAAO,KAAK,KAAK,IAAW,KAAK,MAAM;EACzC;EAEA,WAAW,OAAa;AACtB,WAAO,KAAK,KAAK,IAAS,GAAG,KAAK,MAAM,IAAI,KAAK,EAAE;EACrD;EAEA,UAAU,KAAQ;AAChB,WAAO,KAAK,KAAK,KAAU,KAAK,QAAQ,GAAG;EAC7C;EAEA,UAAU,OAAe,KAAQ;AAC/B,WAAO,KAAK,KAAK,IAAS,GAAG,KAAK,MAAM,IAAI,KAAK,IAAI,GAAG;EAC1D;EAEA,UAAU,OAAa;AACrB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,IAAI,KAAK,EAAE;EACzD;;qCAvBW,aAAU,mBAAA,UAAA,CAAA;EAAA;4EAAV,aAAU,SAAV,YAAU,WAAA,YADG,OAAM,CAAA;;",
  "names": []
}

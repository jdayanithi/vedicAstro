{
  "version": 3,
  "sources": ["src/app/pages/keynotes/keynote-list/keynote-list.component.ts", "src/app/pages/keynotes/keynote-details/keynote-details.component.ts", "src/app/utils/error-handler.util.ts", "src/app/services/error-handler.service.ts", "src/app/pages/keynotes/add-keynote/add-keynote.component.ts", "src/app/pages/keynotes/keynotes.routes.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink, Router } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LessonKeynoteService, LessonKeynote } from '../../../services/lesson-keynote.service';\r\nimport { LessonService } from '../../../services/lesson.service';\r\n\r\n@Component({\r\n  selector: 'app-keynote-list',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterLink,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatTooltipModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>Lesson Keynotes Management</h1>\r\n        <button mat-raised-button color=\"primary\" routerLink=\"/keynotes/add\">\r\n          <mat-icon>add</mat-icon>\r\n          Add Keynote\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Keynotes</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <!-- Filters -->\r\n          <div class=\"filters-container\">\r\n            <mat-form-field appearance=\"outline\" class=\"filter-field\">\r\n              <mat-label>Search keynotes</mat-label>\r\n              <input matInput \r\n                     [(ngModel)]=\"searchQuery\" \r\n                     (input)=\"onSearchChange()\"\r\n                     placeholder=\"Search by title or content...\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"filter-field\">\r\n              <mat-label>Filter by Lesson</mat-label>\r\n              <mat-select [(ngModel)]=\"selectedLessonId\" (selectionChange)=\"onLessonFilterChange()\">\r\n                <mat-option value=\"\">All Lessons</mat-option>\r\n                <mat-option *ngFor=\"let lesson of lessons\" [value]=\"lesson.lessonId\">\r\n                  {{lesson.title}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"filter-field\">\r\n              <mat-label>Content Type</mat-label>\r\n              <mat-select [(ngModel)]=\"selectedContentType\" (selectionChange)=\"onContentTypeFilterChange()\">\r\n                <mat-option value=\"\">All Types</mat-option>\r\n                <mat-option value=\"text\">Text</mat-option>\r\n                <mat-option value=\"bullet_points\">Bullet Points</mat-option>\r\n                <mat-option value=\"quote\">Quote</mat-option>\r\n                <mat-option value=\"example\">Example</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <button mat-stroked-button (click)=\"showImportantOnly = !showImportantOnly; loadKeynotes()\" \r\n                    [color]=\"showImportantOnly ? 'primary' : ''\">\r\n              <mat-icon>{{showImportantOnly ? 'star' : 'star_border'}}</mat-icon>\r\n              Important Only\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Loading -->\r\n          <div *ngIf=\"loading\" class=\"loading-container\">\r\n            <mat-spinner></mat-spinner>\r\n          </div>\r\n\r\n          <!-- Keynotes Table -->\r\n          <div *ngIf=\"!loading\">\r\n            <table mat-table [dataSource]=\"keynotes\" class=\"full-width\">\r\n              <ng-container matColumnDef=\"order\">\r\n                <th mat-header-cell *matHeaderCellDef>Order</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <span class=\"order-badge\">{{keynote.orderSequence}}</span>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"title\">\r\n                <th mat-header-cell *matHeaderCellDef>Title</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <div class=\"title-cell\">\r\n                    <span class=\"keynote-title\">{{keynote.title}}</span>\r\n                    <mat-icon *ngIf=\"keynote.isImportant\" class=\"important-icon\" color=\"warn\">star</mat-icon>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"lesson\">\r\n                <th mat-header-cell *matHeaderCellDef>Lesson</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <div class=\"lesson-info\">\r\n                    <span class=\"lesson-title\">{{keynote.lessonTitle}}</span>\r\n                    <span class=\"topic-title\" *ngIf=\"keynote.topicTitle\">{{keynote.topicTitle}}</span>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"contentType\">\r\n                <th mat-header-cell *matHeaderCellDef>Type</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <mat-chip class=\"content-type-chip content-type-{{keynote.contentType}}\">\r\n                    {{getContentTypeLabel(keynote.contentType)}}\r\n                  </mat-chip>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"content\">\r\n                <th mat-header-cell *matHeaderCellDef>Content Preview</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <div class=\"content-preview\" [matTooltip]=\"keynote.content\">\r\n                    {{keynote.content.length > 100 ? keynote.content.substring(0, 100) + '...' : keynote.content}}\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"features\">\r\n                <th mat-header-cell *matHeaderCellDef>Features</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <div class=\"feature-chips\">\r\n                    <mat-chip *ngIf=\"keynote.hasVisualAid\" class=\"feature-chip visual-aid-chip\">\r\n                      <mat-icon>image</mat-icon>\r\n                      Visual Aid\r\n                    </mat-chip>\r\n                    <mat-chip *ngIf=\"keynote.relatedPlanet\" class=\"feature-chip planet-chip\">\r\n                      {{keynote.relatedPlanet}}\r\n                    </mat-chip>\r\n                    <mat-chip *ngIf=\"keynote.relatedZodiac\" class=\"feature-chip zodiac-chip\">\r\n                      {{keynote.relatedZodiac}}\r\n                    </mat-chip>\r\n                  </div>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"actions\">\r\n                <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n                <td mat-cell *matCellDef=\"let keynote\">\r\n                  <button mat-icon-button color=\"primary\" \r\n                          [routerLink]=\"['/keynotes', keynote.keynoteId]\"\r\n                          matTooltip=\"View Details\">\r\n                    <mat-icon>visibility</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"accent\" \r\n                          (click)=\"editKeynote(keynote.keynoteId!)\"\r\n                          matTooltip=\"Edit Keynote\">\r\n                    <mat-icon>edit</mat-icon>\r\n                  </button>\r\n                  <button mat-icon-button color=\"warn\" \r\n                          (click)=\"deleteKeynote(keynote)\"\r\n                          matTooltip=\"Delete Keynote\">\r\n                    <mat-icon>delete</mat-icon>\r\n                  </button>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <!-- No keynotes message -->\r\n            <div *ngIf=\"keynotes.length === 0\" class=\"no-data\">\r\n              <mat-icon>note_alt</mat-icon>\r\n              <p>No keynotes found</p>\r\n              <button mat-raised-button color=\"primary\" routerLink=\"/keynotes/add\">\r\n                Add First Keynote\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      padding: 20px;\r\n    }\r\n\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .header h1 {\r\n      margin: 0;\r\n    }\r\n\r\n    .filters-container {\r\n      display: flex;\r\n      gap: 16px;\r\n      margin-bottom: 20px;\r\n      align-items: center;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .filter-field {\r\n      min-width: 200px;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      padding: 40px;\r\n    }\r\n\r\n    .full-width {\r\n      width: 100%;\r\n    }\r\n\r\n    .order-badge {\r\n      background-color: #e3f2fd;\r\n      color: #1565c0;\r\n      padding: 4px 8px;\r\n      border-radius: 12px;\r\n      font-size: 12px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .title-cell {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .keynote-title {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .important-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n\r\n    .lesson-info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n    }\r\n\r\n    .lesson-title {\r\n      font-weight: 500;\r\n      color: #333;\r\n    }\r\n\r\n    .topic-title {\r\n      font-size: 12px;\r\n      color: #666;\r\n    }\r\n\r\n    .content-type-chip {\r\n      font-size: 11px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .content-type-text {\r\n      background-color: #e8f5e8;\r\n      color: #2e7d32;\r\n    }\r\n\r\n    .content-type-bullet_points {\r\n      background-color: #fff3e0;\r\n      color: #e65100;\r\n    }\r\n\r\n    .content-type-quote {\r\n      background-color: #f3e5f5;\r\n      color: #7b1fa2;\r\n    }\r\n\r\n    .content-type-example {\r\n      background-color: #e3f2fd;\r\n      color: #1565c0;\r\n    }\r\n\r\n    .content-preview {\r\n      max-width: 300px;\r\n      line-height: 1.4;\r\n      color: #666;\r\n    }\r\n\r\n    .feature-chips {\r\n      display: flex;\r\n      gap: 4px;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .feature-chip {\r\n      font-size: 10px;\r\n      height: 24px;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n    }\r\n\r\n    .visual-aid-chip {\r\n      background-color: #fff9c4;\r\n      color: #f57f17;\r\n    }\r\n\r\n    .planet-chip {\r\n      background-color: #fce4ec;\r\n      color: #c2185b;\r\n    }\r\n\r\n    .zodiac-chip {\r\n      background-color: #e1f5fe;\r\n      color: #0277bd;\r\n    }\r\n\r\n    .feature-chip mat-icon {\r\n      font-size: 12px;\r\n      width: 12px;\r\n      height: 12px;\r\n    }\r\n\r\n    .no-data {\r\n      text-align: center;\r\n      padding: 60px 20px;\r\n      color: #666;\r\n    }\r\n\r\n    .no-data mat-icon {\r\n      font-size: 64px;\r\n      width: 64px;\r\n      height: 64px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .no-data p {\r\n      margin: 16px 0 24px 0;\r\n      font-size: 16px;\r\n    }\r\n\r\n    .mat-mdc-cell, .mat-mdc-header-cell {\r\n      padding: 12px 8px;\r\n    }\r\n\r\n    .mat-mdc-row:hover {\r\n      background-color: rgba(0, 0, 0, 0.04);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 12px;\r\n      }\r\n\r\n      .filters-container {\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n      }\r\n\r\n      .filter-field {\r\n        min-width: auto;\r\n        width: 100%;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class KeynoteListComponent implements OnInit {\r\n  keynotes: LessonKeynote[] = [];\r\n  lessons: any[] = [];\r\n  displayedColumns = ['order', 'title', 'lesson', 'contentType', 'content', 'features', 'actions'];\r\n  loading = false;\r\n  searchQuery = '';\r\n  selectedLessonId = '';\r\n  selectedContentType = '';\r\n  showImportantOnly = false;\r\n\r\n  constructor(\r\n    private keynoteService: LessonKeynoteService,\r\n    private lessonService: LessonService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLessons();\r\n    this.loadKeynotes();\r\n  }\r\n  loadLessons(): void {\r\n    this.lessonService.getAllLessons().subscribe({\r\n      next: (lessons: any[]) => {\r\n        this.lessons = lessons;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading lessons:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadKeynotes(): void {\r\n    this.loading = true;\r\n    \r\n    if (this.selectedLessonId && this.showImportantOnly) {\r\n      this.keynoteService.getImportantKeynotesByLessonId(+this.selectedLessonId).subscribe({\r\n        next: (keynotes) => this.handleKeynotesResponse(keynotes),\r\n        error: (error) => this.handleError(error)\r\n      });\r\n    } else if (this.selectedLessonId) {\r\n      this.keynoteService.getKeynotesByLessonId(+this.selectedLessonId).subscribe({\r\n        next: (keynotes) => this.handleKeynotesResponse(keynotes),\r\n        error: (error) => this.handleError(error)\r\n      });\r\n    } else if (this.searchQuery.trim()) {\r\n      this.keynoteService.searchKeynotes(this.searchQuery).subscribe({\r\n        next: (keynotes) => this.handleKeynotesResponse(keynotes),\r\n        error: (error) => this.handleError(error)\r\n      });\r\n    } else {\r\n      this.keynoteService.getAllKeynotes().subscribe({\r\n        next: (keynotes) => this.handleKeynotesResponse(keynotes),\r\n        error: (error) => this.handleError(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleKeynotesResponse(keynotes: LessonKeynote[]): void {\r\n    let filteredKeynotes = keynotes;\r\n\r\n    if (this.showImportantOnly && !this.selectedLessonId) {\r\n      filteredKeynotes = keynotes.filter(k => k.isImportant);\r\n    }\r\n\r\n    if (this.selectedContentType) {\r\n      filteredKeynotes = filteredKeynotes.filter(k => k.contentType === this.selectedContentType);\r\n    }\r\n\r\n    this.keynotes = filteredKeynotes;\r\n    this.loading = false;\r\n  }\r\n\r\n  handleError(error: any): void {\r\n    console.error('Error loading keynotes:', error);\r\n    this.snackBar.open('Error loading keynotes', 'Close', { duration: 3000 });\r\n    this.loading = false;\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    if (this.searchQuery.trim()) {\r\n      this.selectedLessonId = '';\r\n      this.loadKeynotes();\r\n    } else {\r\n      this.loadKeynotes();\r\n    }\r\n  }\r\n\r\n  onLessonFilterChange(): void {\r\n    this.searchQuery = '';\r\n    this.loadKeynotes();\r\n  }\r\n\r\n  onContentTypeFilterChange(): void {\r\n    this.loadKeynotes();\r\n  }\r\n\r\n  getContentTypeLabel(contentType: string): string {\r\n    switch (contentType) {\r\n      case 'text': return 'Text';\r\n      case 'bullet_points': return 'Bullet Points';\r\n      case 'quote': return 'Quote';\r\n      case 'example': return 'Example';\r\n      default: return contentType;\r\n    }\r\n  }\r\n\r\n  editKeynote(id: number): void {\r\n    this.router.navigate(['/keynotes/edit', id]);\r\n  }\r\n\r\n  deleteKeynote(keynote: LessonKeynote): void {\r\n    if (confirm(`Are you sure you want to delete the keynote \"${keynote.title}\"?`)) {\r\n      this.keynoteService.deleteKeynote(keynote.keynoteId!).subscribe({\r\n        next: () => {\r\n          this.snackBar.open('Keynote deleted successfully', 'Close', { duration: 3000 });\r\n          this.loadKeynotes();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting keynote:', error);\r\n          this.snackBar.open('Error deleting keynote', 'Close', { duration: 3000 });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { LessonKeynoteService, LessonKeynote } from '../../../services/lesson-keynote.service';\r\n\r\n@Component({\r\n  selector: 'app-keynote-details',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, \r\n    RouterLink,\r\n    MatCardModule, \r\n    MatButtonModule, \r\n    MatIconModule, \r\n    MatDividerModule, \r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>Keynote Details</h1>\r\n        <div class=\"actions\">\r\n          <button mat-button (click)=\"goBack()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n            Back to Keynotes\r\n          </button>          <button mat-raised-button color=\"accent\" [routerLink]=\"['/keynotes/edit', keynote.keynoteId]\" *ngIf=\"keynote\">\r\n            <mat-icon>edit</mat-icon>\r\n            Edit Keynote\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"loading\" class=\"loading-container\">\r\n        <mat-spinner></mat-spinner>\r\n      </div>\r\n\r\n      <div *ngIf=\"!loading && keynote\" class=\"keynote-details\">\r\n        <!-- Header Information -->\r\n        <mat-card class=\"info-card header-card\">\r\n          <mat-card-content>\r\n            <div class=\"keynote-header\">\r\n              <div class=\"title-section\">\r\n                <h2 class=\"keynote-title\">{{keynote.title}}</h2>\r\n                <div class=\"badges\">\r\n                  <mat-chip class=\"order-badge\">Order: {{keynote.orderSequence}}</mat-chip>\r\n                  <mat-chip *ngIf=\"keynote.isImportant\" class=\"important-badge\">\r\n                    <mat-icon>star</mat-icon>\r\n                    Important\r\n                  </mat-chip>\r\n                  <mat-chip class=\"content-type-badge content-type-{{keynote.contentType}}\">\r\n                    {{getContentTypeLabel(keynote.contentType)}}\r\n                  </mat-chip>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Lesson Information -->\r\n        <mat-card class=\"info-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>Lesson Information</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"info-grid\">\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">Lesson:</span>\r\n                <span class=\"value lesson-link\">{{keynote.lessonTitle}}</span>\r\n              </div>\r\n              <div class=\"info-item\" *ngIf=\"keynote.topicTitle\">\r\n                <span class=\"label\">Topic:</span>\r\n                <span class=\"value\">{{keynote.topicTitle}}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">Lesson ID:</span>\r\n                <span class=\"value\">{{keynote.lessonId}}</span>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Content -->\r\n        <mat-card class=\"info-card content-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>Content</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"content-display\" [ngClass]=\"'content-type-' + keynote.contentType\">\r\n              <div *ngIf=\"keynote.contentType === 'bullet_points'\" class=\"bullet-content\">\r\n                <ul>\r\n                  <li *ngFor=\"let point of getBulletPoints(keynote.content)\">{{point}}</li>\r\n                </ul>\r\n              </div>\r\n              <div *ngIf=\"keynote.contentType === 'quote'\" class=\"quote-content\">\r\n                <blockquote>\r\n                  <mat-icon>format_quote</mat-icon>\r\n                  {{keynote.content}}\r\n                </blockquote>\r\n              </div>\r\n              <div *ngIf=\"keynote.contentType === 'text' || keynote.contentType === 'example'\" class=\"text-content\">\r\n                <p>{{keynote.content}}</p>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Visual Aid -->\r\n        <mat-card class=\"info-card\" *ngIf=\"keynote.hasVisualAid && keynote.visualAidUrl\">\r\n          <mat-card-header>\r\n            <mat-card-title>Visual Aid</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"visual-aid-container\">\r\n              <img [src]=\"keynote.visualAidUrl\" \r\n                   [alt]=\"keynote.title\"\r\n                   (error)=\"onImageError($event)\"\r\n                   class=\"visual-aid-image\">\r\n              <div class=\"visual-aid-url\">\r\n                <span class=\"label\">URL:</span>\r\n                <a [href]=\"keynote.visualAidUrl\" target=\"_blank\" class=\"url-link\">\r\n                  {{keynote.visualAidUrl}}\r\n                  <mat-icon>open_in_new</mat-icon>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- Astrological Information -->\r\n        <mat-card class=\"info-card\" *ngIf=\"keynote.relatedPlanet || keynote.relatedZodiac\">\r\n          <mat-card-header>\r\n            <mat-card-title>Astrological Relations</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"astro-chips\">\r\n              <mat-chip *ngIf=\"keynote.relatedPlanet\" class=\"planet-chip\">\r\n                <mat-icon>brightness_1</mat-icon>\r\n                {{keynote.relatedPlanet}}\r\n              </mat-chip>\r\n              <mat-chip *ngIf=\"keynote.relatedZodiac\" class=\"zodiac-chip\">\r\n                <mat-icon>stars</mat-icon>\r\n                {{keynote.relatedZodiac}}\r\n              </mat-chip>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <!-- System Information -->\r\n        <mat-card class=\"info-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>System Information</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"info-grid\">\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">Keynote ID:</span>\r\n                <span class=\"value\">{{keynote.keynoteId}}</span>\r\n              </div>\r\n              <div class=\"info-item\" *ngIf=\"keynote.createdAt\">\r\n                <span class=\"label\">Created:</span>\r\n                <span class=\"value\">{{keynote.createdAt | date:'medium'}}</span>\r\n              </div>\r\n              <div class=\"info-item\" *ngIf=\"keynote.updatedAt\">\r\n                <span class=\"label\">Last Updated:</span>\r\n                <span class=\"value\">{{keynote.updatedAt | date:'medium'}}</span>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div *ngIf=\"!loading && !keynote\" class=\"no-keynote\">\r\n        <mat-icon>note_alt</mat-icon>\r\n        <h2>Keynote Not Found</h2>\r\n        <p>The keynote you're looking for doesn't exist or has been deleted.</p>\r\n        <button mat-raised-button color=\"primary\" (click)=\"goBack()\">\r\n          Go Back to Keynotes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      padding: 20px;\r\n      max-width: 1000px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .header h1 {\r\n      margin: 0;\r\n    }\r\n\r\n    .actions {\r\n      display: flex;\r\n      gap: 12px;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      padding: 60px;\r\n    }\r\n\r\n    .keynote-details {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 20px;\r\n    }\r\n\r\n    .info-card {\r\n      width: 100%;\r\n    }\r\n\r\n    .header-card {\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      color: white;\r\n    }\r\n\r\n    .header-card .mat-mdc-card-content {\r\n      padding: 24px;\r\n    }\r\n\r\n    .keynote-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    .keynote-title {\r\n      font-size: 28px;\r\n      font-weight: 600;\r\n      margin: 0 0 16px 0;\r\n      color: white;\r\n    }\r\n\r\n    .badges {\r\n      display: flex;\r\n      gap: 8px;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .order-badge {\r\n      background-color: rgba(255, 255, 255, 0.2);\r\n      color: white;\r\n    }\r\n\r\n    .important-badge {\r\n      background-color: #ff6b6b;\r\n      color: white;\r\n    }\r\n\r\n    .content-type-badge {\r\n      color: white;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .content-type-text {\r\n      background-color: rgba(76, 175, 80, 0.8);\r\n    }\r\n\r\n    .content-type-bullet_points {\r\n      background-color: rgba(255, 152, 0, 0.8);\r\n    }\r\n\r\n    .content-type-quote {\r\n      background-color: rgba(156, 39, 176, 0.8);\r\n    }\r\n\r\n    .content-type-example {\r\n      background-color: rgba(33, 150, 243, 0.8);\r\n    }\r\n\r\n    .info-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n      gap: 16px;\r\n    }\r\n\r\n    .info-item {\r\n      display: flex;\r\n      align-items: center;\r\n      min-height: 40px;\r\n    }\r\n\r\n    .label {\r\n      font-weight: 600;\r\n      color: #666;\r\n      min-width: 100px;\r\n      margin-right: 12px;\r\n    }\r\n\r\n    .value {\r\n      color: #333;\r\n      word-break: break-word;\r\n    }\r\n\r\n    .lesson-link {\r\n      color: #1976d2;\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n\r\n    .content-card {\r\n      min-height: 150px;\r\n    }\r\n\r\n    .content-display {\r\n      font-size: 16px;\r\n      line-height: 1.6;\r\n    }\r\n\r\n    .bullet-content ul {\r\n      margin: 0;\r\n      padding-left: 20px;\r\n    }\r\n\r\n    .bullet-content li {\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .quote-content blockquote {\r\n      margin: 0;\r\n      padding: 20px;\r\n      background-color: #f5f5f5;\r\n      border-left: 4px solid #9c27b0;\r\n      border-radius: 4px;\r\n      font-style: italic;\r\n      position: relative;\r\n    }\r\n\r\n    .quote-content mat-icon {\r\n      position: absolute;\r\n      top: 10px;\r\n      left: 10px;\r\n      color: #9c27b0;\r\n      opacity: 0.3;\r\n      font-size: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n\r\n    .text-content p {\r\n      margin: 0;\r\n      color: #333;\r\n    }\r\n\r\n    .visual-aid-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n\r\n    .visual-aid-image {\r\n      max-width: 100%;\r\n      max-height: 400px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .visual-aid-url {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .url-link {\r\n      color: #1976d2;\r\n      text-decoration: none;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n    }\r\n\r\n    .url-link:hover {\r\n      text-decoration: underline;\r\n    }\r\n\r\n    .url-link mat-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n\r\n    .astro-chips {\r\n      display: flex;\r\n      gap: 12px;\r\n      flex-wrap: wrap;\r\n    }\r\n\r\n    .planet-chip {\r\n      background-color: #fce4ec;\r\n      color: #c2185b;\r\n    }\r\n\r\n    .zodiac-chip {\r\n      background-color: #e1f5fe;\r\n      color: #0277bd;\r\n    }\r\n\r\n    .planet-chip mat-icon,\r\n    .zodiac-chip mat-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n\r\n    .no-keynote {\r\n      text-align: center;\r\n      padding: 80px 20px;\r\n      color: #666;\r\n    }\r\n\r\n    .no-keynote mat-icon {\r\n      font-size: 64px;\r\n      width: 64px;\r\n      height: 64px;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .no-keynote h2 {\r\n      margin: 16px 0;\r\n      color: #333;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 12px;\r\n      }\r\n\r\n      .actions {\r\n        width: 100%;\r\n        justify-content: flex-start;\r\n      }\r\n\r\n      .keynote-header {\r\n        flex-direction: column;\r\n        gap: 16px;\r\n      }\r\n\r\n      .info-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n\r\n      .info-item {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .label {\r\n        min-width: auto;\r\n        margin-right: 0;\r\n        margin-bottom: 4px;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class KeynoteDetailsComponent implements OnInit {\r\n  keynoteId: number | null = null;\r\n  keynote: LessonKeynote | null = null;\r\n  loading = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private keynoteService: LessonKeynoteService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      if (params['id']) {\r\n        this.keynoteId = +params['id'];\r\n        this.loadKeynote();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadKeynote(): void {\r\n    if (!this.keynoteId) return;\r\n\r\n    this.loading = true;\r\n    this.keynoteService.getKeynoteById(this.keynoteId).subscribe({\r\n      next: (keynote) => {\r\n        this.keynote = keynote;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading keynote:', error);\r\n        this.snackBar.open('Error loading keynote details', 'Close', { duration: 3000 });\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getContentTypeLabel(contentType: string): string {\r\n    switch (contentType) {\r\n      case 'text': return 'Text';\r\n      case 'bullet_points': return 'Bullet Points';\r\n      case 'quote': return 'Quote';\r\n      case 'example': return 'Example';\r\n      default: return contentType;\r\n    }\r\n  }\r\n\r\n  getBulletPoints(content: string): string[] {\r\n    return content.split('\\n')\r\n      .map(line => line.trim())\r\n      .filter(line => line.length > 0)\r\n      .map(line => line.replace(/^[•\\-\\*]\\s*/, ''));\r\n  }\r\n\r\n  onImageError(event: any): void {\r\n    event.target.style.display = 'none';\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/keynotes']);\r\n  }\r\n}\r\n", "/**\r\n * Centralized error handling utility for extracting and formatting backend error messages\r\n */\r\nexport class ErrorHandlerUtil {\r\n  \r\n  /**\r\n   * Extracts a user-friendly error message from various error response formats\r\n   * @param error - The error object from HTTP requests\r\n   * @param defaultMessage - Default message to show if no specific error is found\r\n   * @returns A user-friendly error message string\r\n   */\r\n  static extractErrorMessage(error: any, defaultMessage: string = 'An error occurred. Please try again.'): string {\r\n    if (!error) {\r\n      return defaultMessage;\r\n    }\r\n\r\n    // Check for backend validation errors with field-specific messages\r\n    if (error.error && error.error.fieldErrors) {\r\n      // Extract field validation errors from backend GlobalExceptionHandler\r\n      const fieldErrors = error.error.fieldErrors;\r\n      const errorMessages = Object.entries(fieldErrors)\r\n        .map(([field, message]) => `${field}: ${message}`)\r\n        .join(', ');\r\n      return errorMessages || error.error.message || defaultMessage;\r\n    }\r\n\r\n    // Check for standard backend error response format\r\n    if (error.error && error.error.message) {\r\n      return error.error.message;\r\n    }\r\n\r\n    // Check for direct error message in response\r\n    if (error.error && typeof error.error === 'string') {\r\n      return error.error;\r\n    }\r\n\r\n    // Check for error property directly\r\n    if (error.error && error.error.error) {\r\n      return error.error.error;\r\n    }\r\n\r\n    // Check for message property directly on error object\r\n    if (error.message) {\r\n      return error.message;\r\n    }\r\n\r\n    // Handle HTTP status code specific errors\r\n    if (error.status) {\r\n      switch (error.status) {\r\n        case 400:\r\n          return error.error?.message || 'Invalid request. Please check your input data.';\r\n        case 401:\r\n          return 'Authentication failed. Please log in again.';\r\n        case 403:\r\n          return 'You do not have permission to perform this action.';\r\n        case 404:\r\n          return 'The requested resource was not found.';\r\n        case 409:\r\n          return error.error?.message || 'A conflict occurred. The resource may already exist.';\r\n        case 422:\r\n          return error.error?.message || 'Validation failed. Please check your input data.';\r\n        case 500:\r\n          return error.error?.message || 'Server error. Please try again later.';\r\n        case 0:\r\n          return 'Unable to connect to the server. Please check your internet connection.';\r\n        default:\r\n          return error.error?.message || `Server error (${error.status}). Please try again later.`;\r\n      }\r\n    }\r\n\r\n    return defaultMessage;\r\n  }\r\n\r\n  /**\r\n   * Formats validation errors for display\r\n   * @param fieldErrors - Object containing field validation errors\r\n   * @returns Formatted error message string\r\n   */\r\n  static formatValidationErrors(fieldErrors: Record<string, string>): string {\r\n    if (!fieldErrors || typeof fieldErrors !== 'object') {\r\n      return 'Validation failed. Please check your input data.';\r\n    }\r\n\r\n    const errorMessages = Object.entries(fieldErrors)\r\n      .map(([field, message]) => {\r\n        // Format field names to be more user-friendly\r\n        const friendlyFieldName = field\r\n          .replace(/([A-Z])/g, ' $1')\r\n          .replace(/^./, str => str.toUpperCase())\r\n          .trim();\r\n        return `${friendlyFieldName}: ${message}`;\r\n      });\r\n\r\n    return errorMessages.length === 1 \r\n      ? errorMessages[0] \r\n      : `Multiple validation errors: ${errorMessages.join('; ')}`;\r\n  }\r\n\r\n  /**\r\n   * Determines if an error is a validation error\r\n   * @param error - The error object\r\n   * @returns True if it's a validation error\r\n   */\r\n  static isValidationError(error: any): boolean {\r\n    return error?.error?.fieldErrors || \r\n           error?.status === 400 || \r\n           error?.status === 422 ||\r\n           (error?.error?.message && error.error.message.toLowerCase().includes('validation'));\r\n  }\r\n\r\n  /**\r\n   * Determines if an error is a conflict error (e.g., duplicate entry)\r\n   * @param error - The error object\r\n   * @returns True if it's a conflict error\r\n   */\r\n  static isConflictError(error: any): boolean {\r\n    return error?.status === 409 ||\r\n           (error?.error?.message && \r\n            (error.error.message.toLowerCase().includes('duplicate') ||\r\n             error.error.message.toLowerCase().includes('already exists') ||\r\n             error.error.message.toLowerCase().includes('conflict')));\r\n  }\r\n\r\n  /**\r\n   * Gets the appropriate snackbar panel class based on error type\r\n   * @param error - The error object\r\n   * @returns CSS class name for snackbar styling\r\n   */\r\n  static getSnackbarClass(error: any): string[] {\r\n    if (this.isValidationError(error)) {\r\n      return ['warning-snackbar'];\r\n    }\r\n    if (this.isConflictError(error)) {\r\n      return ['warning-snackbar'];\r\n    }\r\n    return ['error-snackbar'];\r\n  }\r\n}\r\n", "import { Injectable, inject } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ErrorHandlerUtil } from '../utils/error-handler.util';\r\n\r\n/**\r\n * Injectable service for handling errors consistently across the application\r\n * This service uses the ErrorHandlerUtil for message extraction and provides\r\n * convenient methods for showing error messages with proper styling\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandlerService {\r\n  private snackBar = inject(MatSnackBar);\r\n\r\n  /**\r\n   * Shows an error message using MatSnackBar with appropriate styling\r\n   * @param error - The error object from HTTP requests or other sources\r\n   * @param defaultMessage - Default message if no specific error can be extracted\r\n   * @param duration - Duration to show the snackbar (default: 5000ms)\r\n   */\r\n  showError(error: any, defaultMessage: string = 'An error occurred. Please try again.', duration: number = 5000): void {\r\n    const errorMessage = ErrorHandlerUtil.extractErrorMessage(error, defaultMessage);\r\n    const panelClass = ErrorHandlerUtil.getSnackbarClass(error);\r\n    \r\n    this.snackBar.open(errorMessage, 'Close', {\r\n      duration,\r\n      panelClass\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Shows a success message using MatSnackBar\r\n   * @param message - Success message to display\r\n   * @param duration - Duration to show the snackbar (default: 3000ms)\r\n   */\r\n  showSuccess(message: string, duration: number = 3000): void {\r\n    this.snackBar.open(message, 'Close', {\r\n      duration,\r\n      panelClass: ['success-snackbar']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Shows a warning message using MatSnackBar\r\n   * @param message - Warning message to display\r\n   * @param duration - Duration to show the snackbar (default: 4000ms)\r\n   */\r\n  showWarning(message: string, duration: number = 4000): void {\r\n    this.snackBar.open(message, 'Close', {\r\n      duration,\r\n      panelClass: ['warning-snackbar']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Shows an info message using MatSnackBar\r\n   * @param message - Info message to display\r\n   * @param duration - Duration to show the snackbar (default: 3000ms)\r\n   */\r\n  showInfo(message: string, duration: number = 3000): void {\r\n    this.snackBar.open(message, 'Close', {\r\n      duration,\r\n      panelClass: ['info-snackbar']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles API errors with specific patterns for common scenarios\r\n   * @param error - The error object\r\n   * @param context - Context about what operation failed (e.g., 'saving lesson')\r\n   * @param duration - Duration to show the snackbar\r\n   */\r\n  handleApiError(error: any, context: string = 'operation', duration: number = 5000): void {\r\n    let defaultMessage = `Error ${context}. Please try again.`;\r\n    \r\n    // Handle specific error scenarios\r\n    if (ErrorHandlerUtil.isValidationError(error)) {\r\n      defaultMessage = `Validation failed while ${context}. Please check your input data.`;\r\n    } else if (ErrorHandlerUtil.isConflictError(error)) {\r\n      defaultMessage = `A conflict occurred while ${context}. The resource may already exist.`;\r\n    } else if (error?.status === 404) {\r\n      defaultMessage = `Resource not found while ${context}.`;\r\n    } else if (error?.status === 403) {\r\n      defaultMessage = `You do not have permission to perform this ${context}.`;\r\n    } else if (error?.status === 401) {\r\n      defaultMessage = `Authentication required to ${context}. Please log in again.`;\r\n    }\r\n\r\n    this.showError(error, defaultMessage, duration);\r\n  }\r\n\r\n  /**\r\n   * Handles form validation errors specifically\r\n   * @param error - The error object\r\n   * @param formContext - Context about what form failed (e.g., 'lesson form')\r\n   */\r\n  handleFormError(error: any, formContext: string = 'form'): void {\r\n    if (ErrorHandlerUtil.isValidationError(error) && error?.error?.fieldErrors) {\r\n      const validationMessage = ErrorHandlerUtil.formatValidationErrors(error.error.fieldErrors);\r\n      this.showWarning(validationMessage, 6000);\r\n    } else {\r\n      this.handleApiError(error, `submitting ${formContext}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logs error details to console for debugging\r\n   * @param error - The error object\r\n   * @param context - Context about where the error occurred\r\n   */\r\n  logError(error: any, context: string): void {\r\n    console.error(`Error in ${context}:`, error);\r\n    \r\n    // Log additional details for debugging\r\n    if (error?.error) {\r\n      console.error('Error details:', error.error);\r\n    }\r\n    if (error?.status) {\r\n      console.error('HTTP Status:', error.status);\r\n    }\r\n    if (error?.message) {\r\n      console.error('Error message:', error.message);\r\n    }\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { LessonKeynoteService, LessonKeynote } from '../../../services/lesson-keynote.service';\r\nimport { LessonService } from '../../../services/lesson.service';\r\nimport { KeynoteTagService, KeynoteTag } from '../../../services/keynote-tag.service';\r\nimport { TagService, Tag } from '../../../services/tag.service';\r\nimport { ErrorHandlerService } from '../../../services/error-handler.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-keynote',\r\n  standalone: true,  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatAutocompleteModule,\r\n    MatDividerModule,\r\n    MatTooltipModule\r\n  ],\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"header\">\r\n        <h1>{{ isEditMode ? 'Edit Keynote' : 'Add New Keynote' }}</h1>\r\n        <button mat-button (click)=\"goBack()\">\r\n          <mat-icon>arrow_back</mat-icon>\r\n          Back to Keynotes\r\n        </button>\r\n      </div>\r\n\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>{{ isEditMode ? 'Edit Keynote Details' : 'Keynote Information' }}</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div *ngIf=\"loading\" class=\"loading-container\">\r\n            <mat-spinner></mat-spinner>\r\n          </div>\r\n\r\n          <form *ngIf=\"!loading\" [formGroup]=\"keynoteForm\" (ngSubmit)=\"onSubmit()\" class=\"keynote-form\">\r\n            <!-- Basic Information -->\r\n            <div class=\"section\">\r\n              <h3>Basic Information</h3>\r\n              \r\n              <div class=\"form-row\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Lesson</mat-label>\r\n                  <input matInput\r\n                         formControlName=\"lessonSearch\"\r\n                         [matAutocomplete]=\"lessonAuto\"\r\n                         placeholder=\"Search and select lesson\">\r\n                  <mat-autocomplete #lessonAuto=\"matAutocomplete\" [displayWith]=\"displayLessonFn\">\r\n                    <mat-option *ngFor=\"let lesson of filteredLessons | async\" [value]=\"lesson\">\r\n                      <div class=\"lesson-option\">\r\n                        <span class=\"lesson-title\">{{lesson.title}}</span>\r\n                        <span class=\"topic-title\">{{lesson.topicTitle}}</span>\r\n                      </div>\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                  <mat-error *ngIf=\"keynoteForm.get('lessonSearch')?.hasError('required')\">\r\n                    Lesson is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Order Sequence</mat-label>\r\n                  <input matInput \r\n                         type=\"number\" \r\n                         formControlName=\"orderSequence\" \r\n                         placeholder=\"Auto-assigned if empty\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Title</mat-label>\r\n                <input matInput formControlName=\"title\" placeholder=\"Enter keynote title\">\r\n                <mat-error *ngIf=\"keynoteForm.get('title')?.hasError('required')\">\r\n                  Title is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n\r\n              <div class=\"form-row\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Content Type</mat-label>\r\n                  <mat-select formControlName=\"contentType\">\r\n                    <mat-option value=\"text\">Text</mat-option>\r\n                    <mat-option value=\"bullet_points\">Bullet Points</mat-option>\r\n                    <mat-option value=\"quote\">Quote</mat-option>\r\n                    <mat-option value=\"example\">Example</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"keynoteForm.get('contentType')?.hasError('required')\">\r\n                    Content type is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n\r\n                <div class=\"checkbox-group\">\r\n                  <mat-checkbox formControlName=\"isImportant\">\r\n                    <mat-icon>star</mat-icon>\r\n                    Mark as Important\r\n                  </mat-checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Content Section -->\r\n            <div class=\"section\">\r\n              <h3>Content</h3>\r\n              \r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Content</mat-label>\r\n                <textarea matInput \r\n                          formControlName=\"content\" \r\n                          rows=\"6\" \r\n                          placeholder=\"Enter keynote content\">\r\n                </textarea>\r\n                <mat-hint>\r\n                  <span *ngIf=\"keynoteForm.get('contentType')?.value === 'bullet_points'\">\r\n                    Use bullet points format (• item 1, • item 2, etc.)\r\n                  </span>\r\n                  <span *ngIf=\"keynoteForm.get('contentType')?.value === 'quote'\">\r\n                    Include quotation marks for quotes\r\n                  </span>\r\n                </mat-hint>\r\n                <mat-error *ngIf=\"keynoteForm.get('content')?.hasError('required')\">\r\n                  Content is required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Visual Aid Section -->\r\n            <div class=\"section\">\r\n              <h3>Visual Aid</h3>\r\n              \r\n              <div class=\"checkbox-group\">\r\n                <mat-checkbox formControlName=\"hasVisualAid\" (change)=\"onVisualAidChange($event)\">\r\n                  <mat-icon>image</mat-icon>\r\n                  Has Visual Aid\r\n                </mat-checkbox>\r\n              </div>\r\n\r\n              <mat-form-field appearance=\"outline\" *ngIf=\"keynoteForm.get('hasVisualAid')?.value\">\r\n                <mat-label>Visual Aid URL</mat-label>\r\n                <input matInput formControlName=\"visualAidUrl\" placeholder=\"Enter image/media URL\">\r\n                <mat-hint>URL to image, diagram, or other visual content</mat-hint>\r\n              </mat-form-field>\r\n            </div>            <!-- Astrological Information -->\r\n            <div class=\"section\">\r\n              <h3>Astrological Relations</h3>\r\n              \r\n              <div class=\"form-row\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Related Planet</mat-label>\r\n                  <mat-select formControlName=\"relatedPlanet\">\r\n                    <mat-option value=\"\">None</mat-option>\r\n                    <mat-option *ngFor=\"let planet of planets\" [value]=\"planet\">\r\n                      {{planet}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Related Zodiac Sign</mat-label>\r\n                  <mat-select formControlName=\"relatedZodiac\">\r\n                    <mat-option value=\"\">None</mat-option>\r\n                    <mat-option *ngFor=\"let sign of zodiacSigns\" [value]=\"sign\">\r\n                      {{sign}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <!-- Tags Section -->\r\n            <div class=\"section\">\r\n              <div class=\"section-header\">\r\n                <h3 class=\"section-title\">\r\n                  <mat-icon>label</mat-icon>\r\n                  Keynote Tags\r\n                </h3>\r\n                <button \r\n                  mat-raised-button \r\n                  color=\"accent\" \r\n                  type=\"button\" \r\n                  (click)=\"addTag()\"\r\n                  class=\"add-tag-btn\"\r\n                >\r\n                  <mat-icon>add</mat-icon>\r\n                  Add Tag\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"tags-container\" formArrayName=\"keynoteTags\">\r\n                <div \r\n                  *ngFor=\"let tag of keynoteTags.controls; let i = index\" \r\n                  [formGroupName]=\"i\"\r\n                  class=\"tag-item\"\r\n                >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Tag</mat-label>\r\n                    <mat-select formControlName=\"tagId\" required>\r\n                      <mat-option *ngFor=\"let tagOption of allTags\" [value]=\"tagOption.tagId\">\r\n                        {{ tagOption.tagName }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"tag.get('tagId')?.hasError('required')\">\r\n                      Tag selection is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Relevance Score</mat-label>\r\n                    <input matInput formControlName=\"relevanceScore\" type=\"number\" min=\"1\" max=\"10\" />\r\n                    <mat-hint>Enter a score from 1-10 indicating relevance to the keynote</mat-hint>\r\n                  </mat-form-field>\r\n\r\n                  <div class=\"tag-actions\">\r\n                    <button \r\n                      mat-icon-button \r\n                      color=\"primary\" \r\n                      type=\"button\" \r\n                      (click)=\"saveTag(i)\"\r\n                      matTooltip=\"Save this tag\"\r\n                      class=\"save-tag-btn\"\r\n                    >\r\n                      <mat-icon>save</mat-icon>\r\n                    </button>\r\n                    <button \r\n                      mat-button \r\n                      color=\"warn\" \r\n                      type=\"button\" \r\n                      (click)=\"removeTag(i)\"\r\n                      matTooltip=\"Remove this tag\"\r\n                    >\r\n                      <mat-icon>delete</mat-icon>\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"keynoteTags.length === 0\" class=\"no-tags\">\r\n                  <mat-icon>label_off</mat-icon>\r\n                  <p>No tags added yet. Click \"Add Tag\" to start tagging this keynote.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Form Actions -->\r\n            <div class=\"form-actions\">\r\n              <button mat-button type=\"button\" (click)=\"goBack()\">Cancel</button>\r\n              <button mat-raised-button \r\n                      color=\"primary\" \r\n                      type=\"submit\" \r\n                      [disabled]=\"keynoteForm.invalid || submitting\">\r\n                <mat-spinner *ngIf=\"submitting\" diameter=\"20\"></mat-spinner>\r\n                {{ submitting ? 'Saving...' : (isEditMode ? 'Update Keynote' : 'Create Keynote') }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .container {\r\n      padding: 20px;\r\n      max-width: 900px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .header h1 {\r\n      margin: 0;\r\n    }\r\n\r\n    .loading-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      padding: 40px;\r\n    }\r\n\r\n    .keynote-form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 24px;\r\n    }\r\n\r\n    .section {\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      background-color: #fafafa;\r\n    }\r\n\r\n    .section h3 {\r\n      margin: 0 0 16px 0;\r\n      color: #333;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .form-row {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 16px;\r\n      align-items: start;\r\n    }\r\n\r\n    .form-row mat-form-field {\r\n      width: 100%;\r\n    }\r\n\r\n    mat-form-field {\r\n      width: 100%;\r\n    }\r\n\r\n    .checkbox-group {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin-top: 8px;\r\n    }\r\n\r\n    .checkbox-group mat-checkbox {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n\r\n    .lesson-option {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n      padding: 8px 0;\r\n    }\r\n\r\n    .lesson-title {\r\n      font-weight: 500;\r\n      color: #333;\r\n    }\r\n\r\n    .topic-title {\r\n      font-size: 12px;\r\n      color: #666;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      gap: 12px;\r\n      justify-content: flex-end;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #e0e0e0;\r\n    }    .form-actions button {\r\n      min-width: 120px;\r\n    }\r\n\r\n    /* Tags specific styles */\r\n    .section-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 16px;\r\n    }\r\n\r\n    .section-title {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin: 0;\r\n      color: #333;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .add-tag-btn {\r\n      min-width: auto;\r\n    }\r\n\r\n    .tags-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n\r\n    .tag-item {\r\n      display: grid;\r\n      grid-template-columns: 2fr 1fr auto;\r\n      gap: 12px;\r\n      align-items: start;\r\n      padding: 16px;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 8px;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .tag-actions {\r\n      display: flex;\r\n      gap: 8px;\r\n      align-items: center;\r\n    }\r\n\r\n    .save-tag-btn {\r\n      background-color: #4caf50;\r\n      color: white;\r\n    }\r\n\r\n    .no-tags {\r\n      text-align: center;\r\n      padding: 40px 20px;\r\n      color: #666;\r\n      border: 2px dashed #e0e0e0;\r\n      border-radius: 8px;\r\n      background-color: #f9f9f9;\r\n    }\r\n\r\n    .no-tags mat-icon {\r\n      font-size: 48px;\r\n      width: 48px;\r\n      height: 48px;\r\n      color: #ccc;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .no-tags p {\r\n      margin: 0;\r\n      font-size: 14px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .form-row {\r\n        grid-template-columns: 1fr;\r\n      }\r\n      \r\n      .header {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 12px;\r\n      }\r\n      \r\n      .form-actions {\r\n        flex-direction: column;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AddKeynoteComponent implements OnInit {\r\n  keynoteForm: FormGroup;\r\n  isEditMode = false;\r\n  keynoteId: number | null = null;\r\n  loading = false;\r\n  submitting = false;\r\n  lessons: any[] = [];\r\n  filteredLessons: Observable<any[]>;\r\n  allTags: Tag[] = [];\r\n\r\n  planets = [\r\n    'Sun', 'Moon', 'Mars', 'Mercury', 'Jupiter', 'Venus', 'Saturn', 'Rahu', 'Ketu'\r\n  ];\r\n\r\n  zodiacSigns = [\r\n    'Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo',\r\n    'Libra', 'Scorpio', 'Sagittarius', 'Capricorn', 'Aquarius', 'Pisces'\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private keynoteService: LessonKeynoteService,\r\n    private lessonService: LessonService,\r\n    private keynoteTagService: KeynoteTagService,\r\n    private tagService: TagService,\r\n    private errorHandler: ErrorHandlerService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.keynoteForm = this.createForm();\r\n    this.filteredLessons = this.keynoteForm.get('lessonSearch')!.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this.filterLessons(value))\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    this.loadLessons();\r\n    this.loadAllTags();\r\n    \r\n    this.route.params.subscribe(params => {\r\n      if (params['id']) {\r\n        this.isEditMode = true;\r\n        this.keynoteId = +params['id'];\r\n        this.loadKeynote();\r\n      }\r\n    });\r\n  }\r\n\r\n  get keynoteTags(): FormArray {\r\n    return this.keynoteForm.get('keynoteTags') as FormArray;\r\n  }\r\n  createForm(): FormGroup {\r\n    return this.fb.group({\r\n      lessonSearch: ['', [Validators.required]],\r\n      lessonId: [''],\r\n      title: ['', [Validators.required]],\r\n      content: ['', [Validators.required]],\r\n      contentType: ['text', [Validators.required]],\r\n      orderSequence: [''],\r\n      isImportant: [false],\r\n      hasVisualAid: [false],\r\n      visualAidUrl: [''],\r\n      relatedPlanet: [''],\r\n      relatedZodiac: [''],\r\n      keynoteTags: this.fb.array([])\r\n    });\r\n  }  loadLessons(): void {\r\n    this.lessonService.getAllLessons().subscribe({\r\n      next: (lessons: any[]) => {\r\n        this.lessons = lessons;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading lessons:', error);\r\n        this.errorHandler.handleApiError(error, 'loading lessons');\r\n      }\r\n    });\r\n  }\r\n  loadKeynote(): void {\r\n    if (!this.keynoteId) return;\r\n\r\n    this.loading = true;\r\n    this.keynoteService.getKeynoteById(this.keynoteId).subscribe({\r\n      next: (keynote) => {\r\n        // Find the lesson for autocomplete\r\n        const lesson = this.lessons.find(l => l.lessonId === keynote.lessonId);\r\n        \r\n        this.keynoteForm.patchValue({\r\n          ...keynote,\r\n          lessonSearch: lesson\r\n        });\r\n        \r\n        // Load existing tags\r\n        this.loadKeynoteTags();\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading keynote:', error);\r\n        this.errorHandler.handleApiError(error, 'loading keynote details');\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterLessons(value: any): any[] {\r\n    if (!value || typeof value === 'object') {\r\n      return this.lessons;\r\n    }\r\n    \r\n    const filterValue = value.toLowerCase();\r\n    return this.lessons.filter(lesson => \r\n      lesson.title.toLowerCase().includes(filterValue) ||\r\n      lesson.topicTitle?.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  displayLessonFn = (lesson: any): string => {\r\n    return lesson ? lesson.title : '';\r\n  }\r\n\r\n  onVisualAidChange(event: any): void {\r\n    if (!event.checked) {\r\n      this.keynoteForm.patchValue({ visualAidUrl: '' });\r\n    }\r\n  }\r\n  onSubmit(): void {\r\n    if (this.keynoteForm.invalid) return;\r\n\r\n    this.submitting = true;\r\n    const formValue = this.keynoteForm.value;\r\n    \r\n    // Extract lesson ID from selected lesson\r\n    const selectedLesson = formValue.lessonSearch;\r\n    if (!selectedLesson || !selectedLesson.lessonId) {\r\n      this.snackBar.open('Please select a valid lesson', 'Close', { duration: 3000 });\r\n      this.submitting = false;\r\n      return;\r\n    }\r\n\r\n    const keynoteData: LessonKeynote = {\r\n      lessonId: selectedLesson.lessonId,\r\n      title: formValue.title,\r\n      content: formValue.content,\r\n      contentType: formValue.contentType,\r\n      orderSequence: formValue.orderSequence || undefined,\r\n      isImportant: formValue.isImportant,\r\n      hasVisualAid: formValue.hasVisualAid,\r\n      visualAidUrl: formValue.hasVisualAid ? formValue.visualAidUrl : null,\r\n      relatedPlanet: formValue.relatedPlanet || null,\r\n      relatedZodiac: formValue.relatedZodiac || null\r\n    };\r\n\r\n    const request = this.isEditMode \r\n      ? this.keynoteService.updateKeynote(this.keynoteId!, keynoteData)\r\n      : this.keynoteService.createKeynote(keynoteData);\r\n\r\n    request.subscribe({\r\n      next: async (result) => {\r\n        try {\r\n          // Update keynoteId if this is a new keynote\r\n          if (!this.isEditMode && result.keynoteId) {\r\n            this.keynoteId = result.keynoteId;\r\n          }\r\n\r\n          // Handle tags after keynote save\r\n          await this.handleKeynoteTags();\r\n\r\n          const message = this.isEditMode \r\n            ? `Keynote updated successfully with ${this.keynoteTags.length} tag(s)!`\r\n            : `Keynote created successfully with ${this.keynoteTags.length} tag(s)!`;\r\n          \r\n          this.errorHandler.showSuccess(message);\r\n          this.router.navigate(['/keynotes']);\r\n        } catch (error) {\r\n          console.error('Error handling keynote tags:', error);\r\n          const fallbackMessage = this.isEditMode \r\n            ? 'Keynote updated but some tags failed to save' \r\n            : 'Keynote created but some tags failed to save';\r\n          \r\n          this.errorHandler.showWarning(fallbackMessage);\r\n          this.router.navigate(['/keynotes']);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error saving keynote:', error);\r\n        this.errorHandler.handleApiError(error, 'saving keynote');\r\n        this.submitting = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private async handleKeynoteTags(): Promise<void> {\r\n    if (!this.keynoteId) {\r\n      throw new Error('Keynote ID is required to handle tags');\r\n    }\r\n\r\n    const formTags = this.keynoteTags.value || [];\r\n    \r\n    for (let i = 0; i < formTags.length; i++) {\r\n      const tagData = formTags[i];\r\n      \r\n      // Skip empty or invalid tags\r\n      if (!tagData.tagId || !tagData.relevanceScore) {\r\n        continue;\r\n      }\r\n\r\n      const tagPayload = {\r\n        keynoteId: this.keynoteId,\r\n        tagId: Number(tagData.tagId),\r\n        relevanceScore: Number(tagData.relevanceScore)\r\n      };\r\n\r\n      try {\r\n        if (tagData.keynoteTagId) {\r\n          // Update existing tag\r\n          await this.keynoteTagService.updateKeynoteTag(tagData.keynoteTagId, {\r\n            ...tagPayload,\r\n            keynoteTagId: tagData.keynoteTagId\r\n          }).toPromise();\r\n        } else {\r\n          // Create new tag\r\n          const created = await this.keynoteTagService.createKeynoteTag(tagPayload).toPromise();\r\n          if (created && created.keynoteTagId) {\r\n            // Update the form with the new keynoteTagId\r\n            const tagForm = this.keynoteTags.at(i);\r\n            tagForm.patchValue({ keynoteTagId: created.keynoteTagId });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error handling keynote tag at index ${i}:`, error);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Tag-related methods\r\n  loadAllTags(): void {\r\n    this.tagService.getTags().subscribe({\r\n      next: (tags: Tag[]) => {\r\n        this.allTags = tags;\r\n      },\r\n      error: (error) => {\r\n        this.errorHandler.handleApiError(error, 'loading tags');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadKeynoteTags(): void {\r\n    if (!this.keynoteId) return;\r\n\r\n    this.keynoteTagService.getTagsByKeynoteId(this.keynoteId).subscribe({\r\n      next: (keynoteTags: KeynoteTag[]) => {\r\n        // Clear existing tags\r\n        while (this.keynoteTags.length !== 0) {\r\n          this.keynoteTags.removeAt(0);\r\n        }\r\n        \r\n        // Add existing keynote tags to the form\r\n        keynoteTags.forEach((keynoteTag: KeynoteTag) => {\r\n          const keynoteTagForm = this.fb.group({\r\n            keynoteTagId: [keynoteTag.keynoteTagId],\r\n            tagId: [keynoteTag.tagId, Validators.required],\r\n            relevanceScore: [keynoteTag.relevanceScore || 5]\r\n          });\r\n          this.keynoteTags.push(keynoteTagForm);\r\n        });\r\n      },\r\n      error: (error) => {\r\n        this.errorHandler.handleApiError(error, 'loading keynote tags');\r\n      }\r\n    });\r\n  }\r\n\r\n  addTag(): void {\r\n    const tagForm = this.fb.group({\r\n      keynoteTagId: [null],\r\n      tagId: [null, Validators.required],\r\n      relevanceScore: [5]\r\n    });\r\n    this.keynoteTags.push(tagForm);\r\n  }\r\n\r\n  async saveTag(index: number): Promise<void> {\r\n    const tagForm = this.keynoteTags.at(index);\r\n    \r\n    if (!tagForm.valid) {\r\n      this.snackBar.open('Please select a tag and enter a valid relevance score.', 'Close', { duration: 3000 });\r\n      return;\r\n    }\r\n    \r\n    if (!this.keynoteId) {\r\n      this.snackBar.open('Keynote must be saved before adding tags.', 'Close', { duration: 3000 });\r\n      return;\r\n    }\r\n\r\n    const tagData = tagForm.value;\r\n    const tagPayload = {\r\n      keynoteId: this.keynoteId,\r\n      tagId: Number(tagData.tagId),\r\n      relevanceScore: Number(tagData.relevanceScore)\r\n    };\r\n\r\n    try {\r\n      if (tagData.keynoteTagId) {\r\n        // Update existing tag\r\n        await this.keynoteTagService.updateKeynoteTag(tagData.keynoteTagId, { \r\n          ...tagPayload, \r\n          keynoteTagId: tagData.keynoteTagId \r\n        }).toPromise();\r\n        this.errorHandler.showSuccess('Tag updated successfully.');      } else {\r\n        // Create new tag\r\n        const created = await this.keynoteTagService.createKeynoteTag(tagPayload).toPromise();\r\n        if (created && created.keynoteTagId) {\r\n          tagForm.patchValue({ keynoteTagId: created.keynoteTagId });\r\n        }\r\n        this.errorHandler.showSuccess('Tag added successfully.');\r\n      }\r\n      \r\n      // Reload tags to ensure consistency\r\n      this.loadKeynoteTags();\r\n    } catch (error: any) {\r\n      this.errorHandler.handleApiError(error, 'saving tag');\r\n    }\r\n  }\r\n\r\n  async removeTag(index: number): Promise<void> {\r\n    const tagForm = this.keynoteTags.at(index);\r\n    const tagData = tagForm.value;\r\n    \r\n    if (tagData.keynoteTagId) {\r\n      // Delete from backend\r\n      try {\r\n        await this.keynoteTagService.deleteKeynoteTag(tagData.keynoteTagId).toPromise();\r\n        this.errorHandler.showSuccess('Tag deleted successfully.');\r\n        this.loadKeynoteTags();\r\n      } catch (error: any) {\r\n        this.errorHandler.handleApiError(error, 'deleting tag');\r\n      }\r\n    } else {\r\n      // Just remove locally if not saved yet\r\n      this.keynoteTags.removeAt(index);\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/keynotes']);\r\n  }\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { KeynoteListComponent } from './keynote-list/keynote-list.component';\r\nimport { KeynoteDetailsComponent } from './keynote-details/keynote-details.component';\r\nimport { AddKeynoteComponent } from './add-keynote/add-keynote.component';\r\n\r\nexport const KEYNOTES_ROUTES: Routes = [\r\n  { path: '', component: KeynoteListComponent },\r\n  { path: 'add', component: AddKeynoteComponent },\r\n  { path: 'edit/:id', component: AddKeynoteComponent },\r\n  { path: ':id', component: KeynoteDetailsComponent }\r\n];\r\n"],
  "mappings": "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",
  "names": ["_c0"]
}
